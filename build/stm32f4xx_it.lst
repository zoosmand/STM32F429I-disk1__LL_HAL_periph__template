ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	NMI_Handler
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	NMI_Handler:
  28              	.LFB1338:
  29              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /**
   2:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   3:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   4:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   6:Core/Src/stm32f4xx_it.c ****   * @attention
   7:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   8:Core/Src/stm32f4xx_it.c ****   */
   9:Core/Src/stm32f4xx_it.c **** 
  10:Core/Src/stm32f4xx_it.c **** 
  11:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  12:Core/Src/stm32f4xx_it.c **** // #include "main.h"
  13:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  14:Core/Src/stm32f4xx_it.c **** 
  15:Core/Src/stm32f4xx_it.c **** 
  16:Core/Src/stm32f4xx_it.c **** 
  17:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  18:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  19:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  20:Core/Src/stm32f4xx_it.c **** /**
  21:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  22:Core/Src/stm32f4xx_it.c ****   */
  23:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void) {
  30              		.loc 1 23 24 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  24:Core/Src/stm32f4xx_it.c ****   //
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 2


  25:Core/Src/stm32f4xx_it.c **** }
  35              		.loc 1 25 1 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1338:
  40 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	HardFault_Handler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	HardFault_Handler:
  50              	.LFB1339:
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /**
  28:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  29:Core/Src/stm32f4xx_it.c ****   */
  30:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void) {
  51              		.loc 1 30 30 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  31:Core/Src/stm32f4xx_it.c ****   while (1) {
  58              		.loc 1 31 3 discriminator 1 view .LVU3
  32:Core/Src/stm32f4xx_it.c ****     //
  33:Core/Src/stm32f4xx_it.c ****   }
  59              		.loc 1 33 3 discriminator 1 view .LVU4
  31:Core/Src/stm32f4xx_it.c ****   while (1) {
  60              		.loc 1 31 9 discriminator 1 view .LVU5
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE1339:
  65 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.p2align 2,,3
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	MemManage_Handler:
  75              	.LFB1340:
  34:Core/Src/stm32f4xx_it.c **** }
  35:Core/Src/stm32f4xx_it.c **** 
  36:Core/Src/stm32f4xx_it.c **** /**
  37:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
  38:Core/Src/stm32f4xx_it.c ****   */
  39:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void) {
  76              		.loc 1 39 30 view -0
  77              		.cfi_startproc
  78              		@ Volatile: function does not return.
  79              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 3


  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.L6:
  40:Core/Src/stm32f4xx_it.c ****   while (1) {
  83              		.loc 1 40 3 discriminator 1 view .LVU7
  41:Core/Src/stm32f4xx_it.c ****     //
  42:Core/Src/stm32f4xx_it.c ****   }
  84              		.loc 1 42 3 discriminator 1 view .LVU8
  40:Core/Src/stm32f4xx_it.c ****   while (1) {
  85              		.loc 1 40 9 discriminator 1 view .LVU9
  86 0000 FEE7     		b	.L6
  87              		.cfi_endproc
  88              	.LFE1340:
  90 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  91              		.align	1
  92              		.p2align 2,,3
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB1341:
  43:Core/Src/stm32f4xx_it.c **** }
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /**
  46:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
  47:Core/Src/stm32f4xx_it.c ****   */
  48:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void) {
 101              		.loc 1 48 29 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 107              	.L8:
  49:Core/Src/stm32f4xx_it.c ****   while (1) {
 108              		.loc 1 49 3 discriminator 1 view .LVU11
  50:Core/Src/stm32f4xx_it.c ****     //
  51:Core/Src/stm32f4xx_it.c ****   }
 109              		.loc 1 51 3 discriminator 1 view .LVU12
  49:Core/Src/stm32f4xx_it.c ****   while (1) {
 110              		.loc 1 49 9 discriminator 1 view .LVU13
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE1341:
 115 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.p2align 2,,3
 118              		.global	UsageFault_Handler
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu fpv4-sp-d16
 124              	UsageFault_Handler:
 125              	.LFB1342:
  52:Core/Src/stm32f4xx_it.c **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 4


  53:Core/Src/stm32f4xx_it.c **** 
  54:Core/Src/stm32f4xx_it.c **** /**
  55:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
  56:Core/Src/stm32f4xx_it.c ****   */
  57:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void) {
 126              		.loc 1 57 31 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 132              	.L10:
  58:Core/Src/stm32f4xx_it.c ****   while (1) {
 133              		.loc 1 58 3 discriminator 1 view .LVU15
  59:Core/Src/stm32f4xx_it.c ****   }
 134              		.loc 1 59 3 discriminator 1 view .LVU16
  58:Core/Src/stm32f4xx_it.c ****   while (1) {
 135              		.loc 1 58 9 discriminator 1 view .LVU17
 136 0000 FEE7     		b	.L10
 137              		.cfi_endproc
 138              	.LFE1342:
 140 0002 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 141              		.align	1
 142              		.p2align 2,,3
 143              		.global	SVC_Handler
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	SVC_Handler:
 150              	.LFB1353:
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE1353:
 159 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 160              		.align	1
 161              		.p2align 2,,3
 162              		.global	DebugMon_Handler
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 166              		.fpu fpv4-sp-d16
 168              	DebugMon_Handler:
 169              	.LFB1355:
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE1355:
 178 0002 00BF     		.section	.text.PendSV_Handler,"ax",%progbits
 179              		.align	1
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 5


 180              		.p2align 2,,3
 181              		.global	PendSV_Handler
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu fpv4-sp-d16
 187              	PendSV_Handler:
 188              	.LFB1357:
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 193 0000 7047     		bx	lr
 194              		.cfi_endproc
 195              	.LFE1357:
 197 0002 00BF     		.section	.text.SysTick_Handler,"ax",%progbits
 198              		.align	1
 199              		.p2align 2,,3
 200              		.global	SysTick_Handler
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	SysTick_Handler:
 207              	.LFB1359:
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212 0000 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE1359:
 216 0002 00BF     		.section	.text.RCC_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.p2align 2,,3
 219              		.global	RCC_IRQHandler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv4-sp-d16
 225              	RCC_IRQHandler:
 226              	.LFB1361:
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 231 0000 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE1361:
 235 0002 00BF     		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 236              		.align	1
 237              		.p2align 2,,3
 238              		.global	EXTI0_IRQHandler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 6


 244              	EXTI0_IRQHandler:
 245              	.LFB1348:
  60:Core/Src/stm32f4xx_it.c **** }
  61:Core/Src/stm32f4xx_it.c **** 
  62:Core/Src/stm32f4xx_it.c **** /**
  63:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  64:Core/Src/stm32f4xx_it.c ****   */
  65:Core/Src/stm32f4xx_it.c **** void SVC_Handler(void) {
  66:Core/Src/stm32f4xx_it.c ****   //
  67:Core/Src/stm32f4xx_it.c **** }
  68:Core/Src/stm32f4xx_it.c **** 
  69:Core/Src/stm32f4xx_it.c **** /**
  70:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
  71:Core/Src/stm32f4xx_it.c ****   */
  72:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void) {
  73:Core/Src/stm32f4xx_it.c ****   //
  74:Core/Src/stm32f4xx_it.c **** }
  75:Core/Src/stm32f4xx_it.c **** 
  76:Core/Src/stm32f4xx_it.c **** /**
  77:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pendable request for system service.
  78:Core/Src/stm32f4xx_it.c ****   */
  79:Core/Src/stm32f4xx_it.c **** void PendSV_Handler(void) {
  80:Core/Src/stm32f4xx_it.c ****   //
  81:Core/Src/stm32f4xx_it.c **** }
  82:Core/Src/stm32f4xx_it.c **** 
  83:Core/Src/stm32f4xx_it.c **** /**
  84:Core/Src/stm32f4xx_it.c ****   * @brief This function handles System tick timer.
  85:Core/Src/stm32f4xx_it.c ****   */
  86:Core/Src/stm32f4xx_it.c **** void SysTick_Handler(void) {
  87:Core/Src/stm32f4xx_it.c ****   // HAL_IncTick();
  88:Core/Src/stm32f4xx_it.c **** }
  89:Core/Src/stm32f4xx_it.c **** 
  90:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  91:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
  92:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  93:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  94:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
  95:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  96:Core/Src/stm32f4xx_it.c **** 
  97:Core/Src/stm32f4xx_it.c **** /**
  98:Core/Src/stm32f4xx_it.c ****   * @brief This function handles RCC global interrupt.
  99:Core/Src/stm32f4xx_it.c ****   */
 100:Core/Src/stm32f4xx_it.c **** void RCC_IRQHandler(void) {
 101:Core/Src/stm32f4xx_it.c ****   //
 102:Core/Src/stm32f4xx_it.c **** }
 103:Core/Src/stm32f4xx_it.c **** 
 104:Core/Src/stm32f4xx_it.c **** 
 105:Core/Src/stm32f4xx_it.c **** 
 106:Core/Src/stm32f4xx_it.c **** /**
 107:Core/Src/stm32f4xx_it.c ****   * @brief This function handles EXTI0 global interrupt.
 108:Core/Src/stm32f4xx_it.c ****   */
 109:Core/Src/stm32f4xx_it.c **** void EXTI0_IRQHandler(void) {
 246              		.loc 1 109 29 view -0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 0
 249              		@ frame_needed = 0, uses_anonymous_args = 0
 250              		@ link register save eliminated.
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 7


 110:Core/Src/stm32f4xx_it.c ****   LL_EXTI_ClearFlag_0_31(LL_EXTI_LINE_0);
 251              		.loc 1 110 3 view .LVU19
 252              	.LVL0:
 253              	.LBB18:
 254              	.LBI18:
 255              		.file 2 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h"
   1:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @file    stm32f4xx_ll_exti.h
   4:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief   Header file of EXTI LL module.
   6:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   ******************************************************************************
   7:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @attention
   8:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *
   9:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *
  12:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   ******************************************************************************
  18:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  19:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  20:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #ifndef __STM32F4xx_LL_EXTI_H
  22:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define __STM32F4xx_LL_EXTI_H
  23:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  24:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #ifdef __cplusplus
  25:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** extern "C" {
  26:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
  27:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  28:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #include "stm32f4xx.h"
  30:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  31:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @addtogroup STM32F4xx_LL_Driver
  32:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
  33:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  34:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  35:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined (EXTI)
  36:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  37:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL EXTI
  38:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
  39:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  40:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  41:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Private Macros ------------------------------------------------------------*/
  45:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  46:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_Private_Macros EXTI Private Macros
  47:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
  48:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  49:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
  50:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
  51:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 8


  52:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  53:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Exported types ------------------------------------------------------------*/
  54:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
  55:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_ES_INIT EXTI Exported Init structure
  56:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
  57:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  58:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** typedef struct
  59:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
  60:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  61:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   uint32_t Line_0_31;           /*!< Specifies the EXTI lines to be enabled or disabled for Lines i
  62:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****                                      This parameter can be any combination of @ref EXTI_LL_EC_LINE 
  63:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  64:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   FunctionalState LineCommand;  /*!< Specifies the new state of the selected EXTI lines.
  65:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****                                      This parameter can be set either to ENABLE or DISABLE */
  66:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  67:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   uint8_t Mode;                 /*!< Specifies the mode for the EXTI lines.
  68:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_MODE. */
  69:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  70:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   uint8_t Trigger;              /*!< Specifies the trigger signal active edge for the EXTI lines.
  71:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****                                      This parameter can be a value of @ref EXTI_LL_EC_TRIGGER. */
  72:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** } LL_EXTI_InitTypeDef;
  73:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  74:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
  75:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
  76:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  77:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
  78:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  79:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Exported constants --------------------------------------------------------*/
  80:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Constants EXTI Exported Constants
  81:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
  82:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  83:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
  84:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_LINE LINE
  85:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
  86:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
  87:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_0                 EXTI_IMR_IM0           /*!< Extended line 0 */
  88:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_1                 EXTI_IMR_IM1           /*!< Extended line 1 */
  89:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_2                 EXTI_IMR_IM2           /*!< Extended line 2 */
  90:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_3                 EXTI_IMR_IM3           /*!< Extended line 3 */
  91:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_4                 EXTI_IMR_IM4           /*!< Extended line 4 */
  92:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_5                 EXTI_IMR_IM5           /*!< Extended line 5 */
  93:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_6                 EXTI_IMR_IM6           /*!< Extended line 6 */
  94:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_7                 EXTI_IMR_IM7           /*!< Extended line 7 */
  95:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_8                 EXTI_IMR_IM8           /*!< Extended line 8 */
  96:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_9                 EXTI_IMR_IM9           /*!< Extended line 9 */
  97:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_10                EXTI_IMR_IM10          /*!< Extended line 10 */
  98:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_11                EXTI_IMR_IM11          /*!< Extended line 11 */
  99:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_12                EXTI_IMR_IM12          /*!< Extended line 12 */
 100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_13                EXTI_IMR_IM13          /*!< Extended line 13 */
 101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_14                EXTI_IMR_IM14          /*!< Extended line 14 */
 102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_15                EXTI_IMR_IM15          /*!< Extended line 15 */
 103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM16)
 104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_16                EXTI_IMR_IM16          /*!< Extended line 16 */
 105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_17                EXTI_IMR_IM17          /*!< Extended line 17 */
 107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM18)
 108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_18                EXTI_IMR_IM18          /*!< Extended line 18 */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 9


 109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_19                EXTI_IMR_IM19          /*!< Extended line 19 */
 111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM20)
 112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_20                EXTI_IMR_IM20          /*!< Extended line 20 */
 113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM21)
 115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_21                EXTI_IMR_IM21          /*!< Extended line 21 */
 116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM22)
 118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_22                EXTI_IMR_IM22          /*!< Extended line 22 */
 119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM23)
 121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_23                EXTI_IMR_IM23          /*!< Extended line 23 */
 122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM24)
 124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_24                EXTI_IMR_IM24          /*!< Extended line 24 */
 125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM25)
 127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_25                EXTI_IMR_IM25          /*!< Extended line 25 */
 128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM26)
 130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_26                EXTI_IMR_IM26          /*!< Extended line 26 */
 131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM27)
 133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_27                EXTI_IMR_IM27          /*!< Extended line 27 */
 134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM28)
 136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_28                EXTI_IMR_IM28          /*!< Extended line 28 */
 137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM29)
 139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_29                EXTI_IMR_IM29          /*!< Extended line 29 */
 140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM30)
 142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_30                EXTI_IMR_IM30          /*!< Extended line 30 */
 143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(EXTI_IMR_IM31)
 145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_31                EXTI_IMR_IM31          /*!< Extended line 31 */
 146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif
 147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_ALL_0_31          EXTI_IMR_IM            /*!< All Extended line not reserved*/
 148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_ALL               ((uint32_t)0xFFFFFFFFU)  /*!< All Extended line */
 151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_LINE_NONE              ((uint32_t)0x00000000U)  /*!< None Extended line */
 154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
 155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #if defined(USE_FULL_LL_DRIVER)
 160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_MODE Mode
 162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_MODE_IT                 ((uint8_t)0x00U) /*!< Interrupt Mode */
 165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_MODE_EVENT              ((uint8_t)0x01U) /*!< Event Mode */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 10


 166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_MODE_IT_EVENT           ((uint8_t)0x02U) /*!< Interrupt & Event Mode */
 167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EC_TRIGGER Edge Trigger
 172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_NONE            ((uint8_t)0x00U) /*!< No Trigger Mode */
 175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING          ((uint8_t)0x01U) /*!< Trigger Rising Mode */
 176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_FALLING         ((uint8_t)0x02U) /*!< Trigger Falling Mode */
 177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_TRIGGER_RISING_FALLING  ((uint8_t)0x03U) /*!< Trigger Rising & Falling Mode */
 178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #endif /*USE_FULL_LL_DRIVER*/
 185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Exported macro ------------------------------------------------------------*/
 192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Macros EXTI Exported Macros
 193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EM_WRITE_READ Common Write and read registers Macros
 197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Write a value in EXTI register
 202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  __REG__ Register to be written
 203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  __VALUE__ Value to be written in the register
 204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_WriteReg(__REG__, __VALUE__) WRITE_REG(EXTI->__REG__, (__VALUE__))
 207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Read a value in EXTI register
 210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  __REG__ Register to be read
 211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval Register value
 212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** #define LL_EXTI_ReadReg(__REG__) READ_REG(EXTI->__REG__)
 214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 11


 223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /* Exported functions --------------------------------------------------------*/
 226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_Exported_Functions EXTI Exported Functions
 227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****  * @{
 228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****  */
 229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_IT_Management IT_Management
 230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Enable ExtiLine Interrupt request for Lines in range 0 to 31
 235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll IMR         IMx           LL_EXTI_EnableIT_0_31
 239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23(*)
 264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableIT_0_31(uint32_t ExtiLine)
 270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   SET_BIT(EXTI->IMR, ExtiLine);
 272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Disable ExtiLine Interrupt request for Lines in range 0 to 31
 276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll IMR         IMx           LL_EXTI_DisableIT_0_31
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 12


 280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23(*)
 305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableIT_0_31(uint32_t ExtiLine)
 311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   CLEAR_BIT(EXTI->IMR, ExtiLine);
 313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Indicate if ExtiLine Interrupt request is enabled for Lines in range 0 to 31
 318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note The reset value for the direct or internal lines (see RM)
 319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       is set to 1 in order to enable the interrupt by default.
 320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       Bits are set automatically at Power on.
 321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll IMR         IMx           LL_EXTI_IsEnabledIT_0_31
 322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 13


 337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23(*)
 347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledIT_0_31(uint32_t ExtiLine)
 353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   return (READ_BIT(EXTI->IMR, ExtiLine) == (ExtiLine));
 355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Event_Management Event_Management
 363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Enable ExtiLine Event request for Lines in range 0 to 31
 368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll EMR         EMx           LL_EXTI_EnableEvent_0_31
 369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23(*)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 14


 394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableEvent_0_31(uint32_t ExtiLine)
 400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   SET_BIT(EXTI->EMR, ExtiLine);
 402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Disable ExtiLine Event request for Lines in range 0 to 31
 408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll EMR         EMx           LL_EXTI_DisableEvent_0_31
 409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23(*)
 434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableEvent_0_31(uint32_t ExtiLine)
 440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   CLEAR_BIT(EXTI->EMR, ExtiLine);
 442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Indicate if ExtiLine Event request is enabled for Lines in range 0 to 31
 447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll EMR         EMx           LL_EXTI_IsEnabledEvent_0_31
 448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be one of the following values:
 449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 15


 451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_17
 467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_23(*)
 473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_ALL_0_31
 474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledEvent_0_31(uint32_t ExtiLine)
 479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   return (READ_BIT(EXTI->EMR, ExtiLine) == (ExtiLine));
 481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Rising_Trigger_Management Rising_Trigger_Management
 490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Enable ExtiLine Rising Edge Trigger for Lines in range 0 to 31
 495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       generated on these lines. If a rising edge on a configurable interrupt
 497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_RTSR register, the
 498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       pending bit is not set.
 499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
 500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
 501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       condition.
 502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll RTSR        RTx           LL_EXTI_EnableRisingTrig_0_31
 503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 16


 508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableRisingTrig_0_31(uint32_t ExtiLine)
 531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   SET_BIT(EXTI->RTSR, ExtiLine);
 533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Disable ExtiLine Rising Edge Trigger for Lines in range 0 to 31
 539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       generated on these lines. If a rising edge on a configurable interrupt
 541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_RTSR register, the
 542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       pending bit is not set.
 543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
 544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
 545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       condition.
 546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll RTSR        RTx           LL_EXTI_DisableRisingTrig_0_31
 547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 17


 565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableRisingTrig_0_31(uint32_t ExtiLine)
 575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   CLEAR_BIT(EXTI->RTSR, ExtiLine);
 577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Check if rising edge trigger is enabled for Lines in range 0 to 31
 583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll RTSR        RTx           LL_EXTI_IsEnabledRisingTrig_0_31
 584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledRisingTrig_0_31(uint32_t ExtiLine)
 612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   return (READ_BIT(EXTI->RTSR, ExtiLine) == (ExtiLine));
 614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Falling_Trigger_Management Falling_Trigger_Management
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 18


 622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Enable ExtiLine Falling Edge Trigger for Lines in range 0 to 31
 627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       generated on these lines. If a falling edge on a configurable interrupt
 629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
 630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       pending bit is not set.
 631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for
 632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       the same interrupt line. In this case, both generate a trigger
 633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       condition.
 634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll FTSR        FTx           LL_EXTI_EnableFallingTrig_0_31
 635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_EnableFallingTrig_0_31(uint32_t ExtiLine)
 663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   SET_BIT(EXTI->FTSR, ExtiLine);
 665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Disable ExtiLine Falling Edge Trigger for Lines in range 0 to 31
 670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note The configurable wakeup lines are edge-triggered. No glitch must be
 671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       generated on these lines. If a Falling edge on a configurable interrupt
 672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       line occurs during a write operation in the EXTI_FTSR register, the
 673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       pending bit is not set.
 674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       Rising and falling edge triggers can be set for the same interrupt line.
 675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       In this case, both generate a trigger condition.
 676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll FTSR        FTx           LL_EXTI_DisableFallingTrig_0_31
 677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 19


 679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_DisableFallingTrig_0_31(uint32_t ExtiLine)
 705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   CLEAR_BIT(EXTI->FTSR, ExtiLine);
 707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Check if falling edge trigger is enabled for Lines in range 0 to 31
 712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll FTSR        FTx           LL_EXTI_IsEnabledFallingTrig_0_31
 713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 20


 736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsEnabledFallingTrig_0_31(uint32_t ExtiLine)
 741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   return (READ_BIT(EXTI->FTSR, ExtiLine) == (ExtiLine));
 743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Software_Interrupt_Management Software_Interrupt_Management
 751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Generate a software Interrupt Event for Lines in range 0 to 31
 756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note If the interrupt is enabled on this line in the EXTI_IMR, writing a 1 to
 757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       this bit when it is at '0' sets the corresponding pending bit in EXTI_PR
 758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       resulting in an interrupt request generation.
 759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       This bit is cleared by clearing the corresponding bit in the EXTI_PR
 760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       register (by writing a 1 into the bit)
 761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll SWIER       SWIx          LL_EXTI_GenerateSWI_0_31
 762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_GenerateSWI_0_31(uint32_t ExtiLine)
 790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   SET_BIT(EXTI->SWIER, ExtiLine);
 792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 21


 793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @}
 797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /** @defgroup EXTI_LL_EF_Flag_Management Flag_Management
 800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @{
 801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Check if the ExtLine Flag is set or not for Lines in range 0 to 31
 805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
 806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
 807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll PR          PIFx           LL_EXTI_IsActiveFlag_0_31
 808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval State of bit (1 or 0).
 834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_IsActiveFlag_0_31(uint32_t ExtiLine)
 836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   return (READ_BIT(EXTI->PR, ExtiLine) == (ExtiLine));
 838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Read ExtLine Combination Flag for Lines in range 0 to 31
 843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
 844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
 845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll PR          PIFx           LL_EXTI_ReadFlag_0_31
 846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 22


 850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
 869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval @note This bit is set when the selected edge event arrives on the interrupt
 872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE uint32_t LL_EXTI_ReadFlag_0_31(uint32_t ExtiLine)
 874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   return (uint32_t)(READ_BIT(EXTI->PR, ExtiLine));
 876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** }
 877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** 
 879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** /**
 880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @brief  Clear ExtLine Flags  for Lines in range 0 to 31
 881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note This bit is set when the selected edge event arrives on the interrupt
 882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *       line. This bit is cleared by writing a 1 to the bit.
 883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @rmtoll PR          PIFx           LL_EXTI_ClearFlag_0_31
 884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @param  ExtiLine This parameter can be a combination of the following values:
 885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_0
 886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_1
 887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_2
 888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_3
 889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_4
 890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_5
 891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_6
 892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_7
 893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_8
 894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_9
 895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_10
 896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_11
 897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_12
 898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_13
 899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_14
 900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_15
 901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_16
 902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_18
 903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_19(*)
 904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_20(*)
 905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_21
 906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   *         @arg @ref LL_EXTI_LINE_22
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 23


 907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   (*): Available in some devices
 908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @note   Please check each device line mapping for EXTI Line availability
 909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   * @retval None
 910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   */
 911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** __STATIC_INLINE void LL_EXTI_ClearFlag_0_31(uint32_t ExtiLine)
 256              		.loc 2 911 22 view .LVU20
 257              	.LBB19:
 912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h ****   WRITE_REG(EXTI->PR, ExtiLine);
 258              		.loc 2 913 3 view .LVU21
 259 0000 014B     		ldr	r3, .L17
 260 0002 0122     		movs	r2, #1
 261 0004 5A61     		str	r2, [r3, #20]
 262              	.LVL1:
 263              		.loc 2 913 3 is_stmt 0 view .LVU22
 264              	.LBE19:
 265              	.LBE18:
 111:Core/Src/stm32f4xx_it.c **** }
 266              		.loc 1 111 1 view .LVU23
 267 0006 7047     		bx	lr
 268              	.L18:
 269              		.align	2
 270              	.L17:
 271 0008 003C0140 		.word	1073822720
 272              		.cfi_endproc
 273              	.LFE1348:
 275              		.section	.text.USART1_IRQHandler,"ax",%progbits
 276              		.align	1
 277              		.p2align 2,,3
 278              		.global	USART1_IRQHandler
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv4-sp-d16
 284              	USART1_IRQHandler:
 285              	.LFB1349:
 112:Core/Src/stm32f4xx_it.c **** 
 113:Core/Src/stm32f4xx_it.c **** 
 114:Core/Src/stm32f4xx_it.c **** 
 115:Core/Src/stm32f4xx_it.c **** /**
 116:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 117:Core/Src/stm32f4xx_it.c ****   */
 118:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void) {
 286              		.loc 1 118 30 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 119:Core/Src/stm32f4xx_it.c ****   LL_USART_ClearFlag_RXNE(USART1);
 291              		.loc 1 119 3 view .LVU25
 292              	.LVL2:
 293              	.LBB20:
 294              	.LBI20:
 295              		.file 3 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h"
   1:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @file    stm32f4xx_ll_usart.h
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 24


   4:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @attention
   8:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *
   9:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *
  12:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   ******************************************************************************
  18:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  19:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  20:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #ifndef __STM32F4xx_LL_USART_H
  22:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __STM32F4xx_LL_USART_H
  23:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  24:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #ifdef __cplusplus
  25:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** extern "C" {
  26:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif
  27:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  28:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #include "stm32f4xx.h"
  30:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  31:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @addtogroup STM32F4xx_LL_Driver
  32:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  33:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  34:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  35:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (USART6) || defined (UART4)
  36:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  37:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  39:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  40:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  41:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  44:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Constants USART Private Constants
  46:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  47:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  48:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  49:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Defines used for the bit position in the register and perform offsets*/
  50:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define USART_POSITION_GTPR_GT                  USART_GTPR_GT_Pos
  51:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
  52:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
  53:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  54:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  55:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  56:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  57:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
  58:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  59:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  60:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 25


  61:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
  62:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  63:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  64:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  65:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  67:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  68:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
  69:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  70:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  71:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
  72:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  73:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
  74:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** typedef struct
  75:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
  76:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  77:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  78:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  79:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  80:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  81:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  82:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  83:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  84:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  85:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
  86:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
  87:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  88:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  89:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  90:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
  91:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
  92:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  93:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  94:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  95:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
  96:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
  97:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
  98:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  99:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** } LL_USART_InitTypeDef;
 111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** typedef struct
 116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 26


 118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                            For more details, refer to description of this function.
 142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_PE                          USART_SR_PE                   /*!< Parity error fla
 160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_FE                          USART_SR_FE                   /*!< Framing error fl
 161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_NE                          USART_SR_NE                   /*!< Noise detected f
 162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_ORE                         USART_SR_ORE                  /*!< Overrun error fl
 163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_IDLE                        USART_SR_IDLE                 /*!< Idle line detect
 164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_RXNE                        USART_SR_RXNE                 /*!< Read data regist
 165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_TC                          USART_SR_TC                   /*!< Transmission com
 166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_TXE                         USART_SR_TXE                  /*!< Transmit data re
 167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_LBD                         USART_SR_LBD                  /*!< LIN break detect
 168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_SR_CTS                         USART_SR_CTS                  /*!< CTS flag */
 169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 27


 175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE                     USART_CR1_RXNEIE              /*!< Read data regist
 179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_TXEIE                      USART_CR1_TXEIE               /*!< Transmit data re
 181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M             /*!< 9 bits word length : S
 224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 28


 232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 29


 289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Write a value in USART register
 331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __REG__ Register to be written
 333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Read a value in USART register
 340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __REG__ Register to be read
 342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Register value
 343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 30


 346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8_100(__PERIPHCLK__, __BAUDRATE__)      ((uint32_t)((((uint64_t)(__P
 361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      (__LL_USART_DIV_SAMPLING8_10
 362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)      ((((__LL_USART_DIV_SAMPLING8
 363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* UART BRR = mantissa + overflow + fraction
 364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****             = (UART DIVMANT << 4) + ((UART DIVFRAQ & 0xF8) << 1) + (UART DIVFRAQ & 0x07) */
 365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __BAUDRATE__)             (((__LL_USART_DIVMANT_SAM
 366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                            ((__LL_USART_DIVFRAQ_SAM
 367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16_100(__PERIPHCLK__, __BAUDRATE__)     ((uint32_t)((((uint64_t)(__P
 377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVMANT_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     (__LL_USART_DIV_SAMPLING16_1
 378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIVFRAQ_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)     ((((__LL_USART_DIV_SAMPLING1
 379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* USART BRR = mantissa + overflow + fraction
 380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****             = (USART DIVMANT << 4) + (USART DIVFRAQ & 0xF0) + (USART DIVFRAQ & 0x0F) */
 381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __BAUDRATE__)            (((__LL_USART_DIVMANT_SAM
 382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                                                            (__LL_USART_DIVFRAQ_SAMP
 384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
 391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
 401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 31


 403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  USART Enable
 405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         flags, in the USARTx_SR are set to their default values.
 419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE));
 437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Receiver Disable
 452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 32


 460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Transmitter Enable
 463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Transmitter Disable
 474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         of Transmitter and Receiver
 486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
 513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 33


 517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 34


 574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_SetDataWidth
 581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          M             LL_USART_GetDataWidth
 595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
 603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
 607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
 608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
 610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
 615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
 617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Oversampling mode
 621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
 622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
 625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
 626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
 628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
 630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 35


 631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
 634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
 637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
 639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
 644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
 646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
 650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
 651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
 654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
 660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
 662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
 666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
 669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
 671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
 676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
 678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
 682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
 685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 36


 688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
 691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
 693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
 697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
 700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
 702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
 707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
 709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
 713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
 716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
 722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
 724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
 728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
 732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
 733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
 734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
 735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
 736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
 737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
 739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
 740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
 741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
 742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
 743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
 744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 37


 745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
 746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
 747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
 750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
 752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
 756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
 759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
 763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
 765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
 769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
 772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
 776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
 778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
 782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
 783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
 784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
 785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
 789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN));
 791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set the length of the stop bits
 795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
 796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 38


 802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
 811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
 812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
 820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
 822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
 826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
 828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
 829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
 830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
 831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
 832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR1          M             LL_USART_ConfigCharacter\n
 833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
 834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
 843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
 844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
 845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
 846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
 847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
 850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                               uint32_t StopBits)
 851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Address of the USART node.
 858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 39


 859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         for wake up with address mark detection.
 860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_SetNodeAddress
 861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  NodeAddress 4 bit Address of the USART node.
 863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetNodeAddress(USART_TypeDef *USARTx, uint32_t NodeAddress)
 866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD, (NodeAddress & USART_CR2_ADD));
 868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return 4 bit Address of the USART node as set in ADD field of CR2.
 872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
 873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
 874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
 876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
 878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD));
 880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
 884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
 887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
 893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
 897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
 900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
 904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
 906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
 910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
 913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 40


 916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
 919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
 923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
 926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
 930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
 932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
 936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
 939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
 940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
 942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
 955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
 956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
 957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
 958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
 959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
 962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
 963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
 964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
 965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
 967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
 969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable One bit sampling method
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 41


 973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
 974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
 978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 981:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 982:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 983:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable One bit sampling method
 984:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
 985:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 986:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
 987:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 988:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
 989:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
 990:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
 991:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
 992:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
 993:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
 994:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
 995:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
 996:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
 997:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 998:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
 999:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1000:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1001:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT));
1002:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1003:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1004:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1005:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1006:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1007:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1008:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1009:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (Baud rate value != 0)
1010:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1011:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1012:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1013:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1014:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1015:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1016:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  BaudRate Baud Rate
1017:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1018:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1019:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t OverS
1020:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****                                           uint32_t BaudRate)
1021:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1022:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1023:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1024:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, BaudRate));
1025:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
1026:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   else
1027:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1028:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, BaudRate));
1029:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 42


1030:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1031:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1032:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1033:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return current Baud Rate value, according to USARTDIV present in BRR register
1034:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (full BRR content), and to used Peripheral Clock and Oversampling mode values
1035:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1036:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_GetBaudRate
1037:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1038:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1039:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1040:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1041:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1042:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Baud Rate
1043:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1044:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t O
1045:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1046:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   register uint32_t usartdiv = 0x0U;
1047:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   register uint32_t brrresult = 0x0U;
1048:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1049:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   usartdiv = USARTx->BRR;
1050:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1051:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   if (OverSampling == LL_USART_OVERSAMPLING_8)
1052:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1053:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     if ((usartdiv & 0xFFF7U) != 0U)
1054:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     {
1055:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****       usartdiv = (uint16_t)((usartdiv & 0xFFF0U) | ((usartdiv & 0x0007U) << 1U)) ;
1056:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****       brrresult = (PeriphClk * 2U) / usartdiv;
1057:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     }
1058:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
1059:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   else
1060:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   {
1061:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     if ((usartdiv & 0xFFFFU) != 0U)
1062:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     {
1063:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****       brrresult = PeriphClk / usartdiv;
1064:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****     }
1065:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   }
1066:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (brrresult);
1067:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1068:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1069:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1070:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1071:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1072:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1073:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_IRDA Configuration functions related to Irda feature
1074:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1075:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1076:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1077:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1078:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable IrDA mode
1079:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1080:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1081:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_EnableIrda
1082:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1083:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1084:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1085:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableIrda(USART_TypeDef *USARTx)
1086:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 43


1087:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1088:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1089:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1090:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1091:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable IrDA mode
1092:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1093:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1094:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_DisableIrda
1095:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1096:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1097:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1098:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableIrda(USART_TypeDef *USARTx)
1099:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_IREN);
1101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if IrDA mode is enabled
1105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IREN          LL_USART_IsEnabledIrda
1108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledIrda(USART_TypeDef *USARTx)
1112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_IREN) == (USART_CR3_IREN));
1114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Configure IrDA Power Mode (Normal or Low Power)
1118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_SetIrdaPowerMode
1121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PowerMode This parameter can be one of the following values:
1123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_LOW
1125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPowerMode(USART_TypeDef *USARTx, uint32_t PowerMode)
1128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_IRLP, PowerMode);
1130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Retrieve IrDA Power Mode configuration (Normal or Low Power)
1134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          IRLP          LL_USART_GetIrdaPowerMode
1137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_IRDA_POWER_NORMAL
1140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPowerMode(USART_TypeDef *USARTx)
1143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 44


1144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_IRLP));
1145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Irda prescaler value, used for dividing the USART clock source
1149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetIrdaPrescaler
1153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0x00 and Max_Data=0xFF
1155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetIrdaPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Irda prescaler value, used for dividing the USART clock source
1164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         to achieve the Irda Low Power frequency (8 bits value)
1165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetIrdaPrescaler
1168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Irda prescaler value (Value between Min_Data=0x00 and Max_Data=0xFF)
1170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetIrdaPrescaler(USART_TypeDef *USARTx)
1172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_Smartcard Configuration functions related to Smartcard feat
1181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Smartcard NACK transmission
1186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_EnableSmartcardNACK
1189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcardNACK(USART_TypeDef *USARTx)
1193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_NACK);
1195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Smartcard NACK transmission
1199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 45


1201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_DisableSmartcardNACK
1202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcardNACK(USART_TypeDef *USARTx)
1206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_NACK);
1208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Smartcard NACK transmission is enabled
1212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          NACK          LL_USART_IsEnabledSmartcardNACK
1215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcardNACK(USART_TypeDef *USARTx)
1219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_NACK) == (USART_CR3_NACK));
1221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Smartcard mode
1225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_EnableSmartcard
1228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSmartcard(USART_TypeDef *USARTx)
1232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Smartcard mode
1238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_DisableSmartcard
1241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSmartcard(USART_TypeDef *USARTx)
1245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_SCEN);
1247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Smartcard mode is enabled
1251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          SCEN          LL_USART_IsEnabledSmartcard
1254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSmartcard(USART_TypeDef *USARTx)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 46


1258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_SCEN) == (USART_CR3_SCEN));
1260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Smartcard prescaler value, used for dividing the USART clock
1264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_SetSmartcardPrescaler
1268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  PrescalerValue Value between Min_Data=0 and Max_Data=31
1270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_PSC, PrescalerValue);
1275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Smartcard prescaler value, used for dividing the USART clock
1279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         source to provide the SMARTCARD Clock (5 bits value)
1280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         PSC           LL_USART_GetSmartcardPrescaler
1283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Smartcard prescaler value (Value between Min_Data=0 and Max_Data=31)
1285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardPrescaler(USART_TypeDef *USARTx)
1287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_PSC));
1289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set Smartcard Guard time value, expressed in nb of baud clocks periods
1293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_SetSmartcardGuardTime
1297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  GuardTime Value between Min_Data=0x00 and Max_Data=0xFF
1299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetSmartcardGuardTime(USART_TypeDef *USARTx, uint32_t GuardTime)
1302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->GTPR, USART_GTPR_GT, GuardTime << USART_POSITION_GTPR_GT);
1304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return Smartcard Guard time value, expressed in nb of baud clocks periods
1308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (GT[7:0] bits : Guard time value)
1309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll GTPR         GT            LL_USART_GetSmartcardGuardTime
1312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Smartcard Guard time value (Value between Min_Data=0x00 and Max_Data=0xFF)
1314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 47


1315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetSmartcardGuardTime(USART_TypeDef *USARTx)
1316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->GTPR, USART_GTPR_GT) >> USART_POSITION_GTPR_GT);
1318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex f
1325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_EnableHalfDuplex
1333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableHalfDuplex(USART_TypeDef *USARTx)
1337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_DisableHalfDuplex
1346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableHalfDuplex(USART_TypeDef *USARTx)
1350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_HDSEL);
1352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
1356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR3          HDSEL         LL_USART_IsEnabledHalfDuplex
1359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledHalfDuplex(USART_TypeDef *USARTx)
1363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL));
1365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration_LIN Configuration functions related to LIN feature
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 48


1372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Set LIN Break Detection Length
1377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_SetLINBrkDetectionLen
1380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  LINBDLength This parameter can be one of the following values:
1382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLINBrkDetectionLen(USART_TypeDef *USARTx, uint32_t LINBDLength)
1387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBDL, LINBDLength);
1389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Return LIN Break Detection Length
1393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LBDL          LL_USART_GetLINBrkDetectionLen
1396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_10B
1399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         @arg @ref LL_USART_LINBREAK_DETECT_11B
1400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLINBrkDetectionLen(USART_TypeDef *USARTx)
1402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBDL));
1404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Enable LIN mode
1408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_EnableLIN
1411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableLIN(USART_TypeDef *USARTx)
1415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Disable LIN mode
1421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_DisableLIN
1424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableLIN(USART_TypeDef *USARTx)
1428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 49


1429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_LINEN);
1430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Indicate if LIN mode is enabled
1434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_IsEnabledLIN
1437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledLIN(USART_TypeDef *USARTx)
1441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR2, USART_CR2_LINEN) == (USART_CR2_LINEN));
1443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_AdvancedConfiguration Advanced Configurations services
1450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Asynchronous Mode (UART)
1455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In UART mode, the following bits must be kept cleared:
1456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Asynchronous Mode
1468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigAsyncMode\n
1471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigAsyncMode\n
1472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigAsyncMode\n
1473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigAsyncMode\n
1474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigAsyncMode
1475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigAsyncMode(USART_TypeDef *USARTx)
1479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Asynchronous mode, the following bits must be kept cleared:
1481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN, CLKEN bits in the USART_CR2 register,
1482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 50


1486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Synchronous Mode
1489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In Synchronous mode, the following bits must be kept cleared:
1490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also sets the USART in Synchronous mode.
1495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Synchronous Mode
1504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, Clock Polarity, ...) should be set using
1505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSyncMode\n
1507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSyncMode\n
1508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSyncMode\n
1509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigSyncMode\n
1510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSyncMode
1511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSyncMode(USART_TypeDef *USARTx)
1515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Synchronous mode, the following bits must be kept cleared:
1517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN, IREN and HDSEL bits in the USART_CR3 register.*/
1519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN | USART_CR3_HDSEL));
1521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in Synchronous mode */
1522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in LIN Mode
1527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In LIN mode, the following bits must be kept cleared:
1528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also set the UART/USART in LIN mode.
1533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set LINEN in CR2 using @ref LL_USART_EnableLIN() function
1542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to LIN Mode
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 51


1543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, LIN Break Detection Length, ...) should be set using
1544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_ConfigLINMode\n
1546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigLINMode\n
1547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          LINEN         LL_USART_ConfigLINMode\n
1548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigLINMode\n
1549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigLINMode\n
1550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigLINMode
1551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigLINMode(USART_TypeDef *USARTx)
1555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In LIN mode, the following bits must be kept cleared:
1557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - STOP and CLKEN bits in the USART_CR2 register,
1558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_CLKEN | USART_CR2_STOP));
1560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_SCEN | USART_CR3_HDSEL));
1561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* Set the UART/USART in LIN mode */
1562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_LINEN);
1563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Half Duplex Mode
1567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In Half Duplex mode, the following bits must be kept cleared:
1568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also sets the UART/USART in Half Duplex mode.
1573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HALFDUPLEX_INSTANCE(USARTx) can be used to check whether or not
1574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Half-Duplex mode is supported by the USARTx instance.
1575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set HDSEL in CR3 using @ref LL_USART_EnableHalfDuplex() function
1581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Half Duplex Mode
1582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigHalfDuplexMode\n
1585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigHalfDuplexMode\n
1586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigHalfDuplexMode\n
1587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigHalfDuplexMode\n
1588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigHalfDuplexMode
1589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigHalfDuplexMode(USART_TypeDef *USARTx)
1593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Half Duplex mode, the following bits must be kept cleared:
1595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN and IREN bits in the USART_CR3 register.*/
1597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_IREN));
1599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in Half Duplex mode */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 52


1600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_HDSEL);
1601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Smartcard Mode
1605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In Smartcard mode, the following bits must be kept cleared:
1606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also configures Stop bits to 1.5 bits and
1610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         sets the USART in Smartcard mode (SCEN bit).
1611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Clock Output is also enabled (CLKEN).
1612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_SMARTCARD_INSTANCE(USARTx) can be used to check whether or not
1613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Smartcard feature is supported by the USARTx instance.
1614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set CLKEN in CR2 using @ref LL_USART_EnableSCLKOutput() function
1620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set SCEN in CR3 using @ref LL_USART_EnableSmartcard() function
1621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Smartcard Mode
1622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Parity, ...) should be set using
1623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigSmartcardMode\n
1625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigSmartcardMode\n
1626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigSmartcardMode\n
1627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigSmartcardMode\n
1628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigSmartcardMode
1629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigSmartcardMode(USART_TypeDef *USARTx)
1633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Smartcard mode, the following bits must be kept cleared:
1635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN bit in the USART_CR2 register,
1636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - IREN and HDSEL bits in the USART_CR3 register.*/
1637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN));
1638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_IREN | USART_CR3_HDSEL));
1639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* Configure Stop bits to 1.5 bits */
1640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* Synchronous mode is activated by default */
1641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR2, (USART_CR2_STOP_0 | USART_CR2_STOP_1 | USART_CR2_CLKEN));
1642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in Smartcard mode */
1643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_SCEN);
1644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Irda Mode
1648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In IRDA mode, the following bits must be kept cleared:
1649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - STOP and CLKEN bits in the USART_CR2 register,
1651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         This function also sets the UART/USART in IRDA mode (IREN bit).
1654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_IRDA_INSTANCE(USARTx) can be used to check whether or not
1655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         IrDA feature is supported by the USARTx instance.
1656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 53


1657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Configure STOP in CR2 using @ref LL_USART_SetStopBitsLength() function
1662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Set IREN in CR3 using @ref LL_USART_EnableIrda() function
1663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Irda Mode
1664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Word length, Power mode, ...) should be set using
1665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigIrdaMode\n
1667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigIrdaMode\n
1668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigIrdaMode\n
1669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigIrdaMode\n
1670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigIrdaMode\n
1671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigIrdaMode
1672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigIrdaMode(USART_TypeDef *USARTx)
1676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In IRDA mode, the following bits must be kept cleared:
1678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN, STOP and CLKEN bits in the USART_CR2 register,
1679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - SCEN and HDSEL bits in the USART_CR3 register.*/
1680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN | USART_CR2_STOP));
1681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL));
1682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* set the UART/USART in IRDA mode */
1683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_IREN);
1684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Perform basic configuration of USART for enabling use in Multi processor Mode
1688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (several USARTs connected in a network, one of the USARTs can be the master,
1689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         its TX output connected to the RX inputs of the other slaves USARTs).
1690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   In MultiProcessor mode, the following bits must be kept cleared:
1691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - LINEN bit in the USART_CR2 register,
1692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - CLKEN bit in the USART_CR2 register,
1693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - SCEN bit in the USART_CR3 register,
1694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - IREN bit in the USART_CR3 register,
1695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *           - HDSEL bit in the USART_CR3 register.
1696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear LINEN in CR2 using @ref LL_USART_DisableLIN() function
1698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear CLKEN in CR2 using @ref LL_USART_DisableSCLKOutput() function
1699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear SCEN in CR3 using @ref LL_USART_DisableSmartcard() function
1700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear IREN in CR3 using @ref LL_USART_DisableIrda() function
1701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         - Clear HDSEL in CR3 using @ref LL_USART_DisableHalfDuplex() function
1702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Other remaining configurations items related to Multi processor Mode
1703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         (as Baud Rate, Wake Up Method, Node address, ...) should be set using
1704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         dedicated functions
1705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR2          LINEN         LL_USART_ConfigMultiProcessMode\n
1706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR2          CLKEN         LL_USART_ConfigMultiProcessMode\n
1707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          SCEN          LL_USART_ConfigMultiProcessMode\n
1708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          HDSEL         LL_USART_ConfigMultiProcessMode\n
1709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         CR3          IREN          LL_USART_ConfigMultiProcessMode
1710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigMultiProcessMode(USART_TypeDef *USARTx)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 54


1714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   /* In Multi Processor mode, the following bits must be kept cleared:
1716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - LINEN and CLKEN bits in the USART_CR2 register,
1717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   - IREN, SCEN and HDSEL bits in the USART_CR3 register.*/
1718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
1719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
1720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @}
1724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /** @defgroup USART_LL_EF_FLAG_Management FLAG_Management
1727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @{
1728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Parity Error Flag is set or not
1732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_IsActiveFlag_PE
1733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_PE(USART_TypeDef *USARTx)
1737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_PE) == (USART_SR_PE));
1739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Framing Error Flag is set or not
1743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_IsActiveFlag_FE
1744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_FE(USART_TypeDef *USARTx)
1748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_FE) == (USART_SR_FE));
1750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Noise error detected Flag is set or not
1754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_IsActiveFlag_NE
1755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_NE(USART_TypeDef *USARTx)
1759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_NE) == (USART_SR_NE));
1761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART OverRun Error Flag is set or not
1765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_IsActiveFlag_ORE
1766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_ORE(USART_TypeDef *USARTx)
1770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 55


1771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_ORE) == (USART_SR_ORE));
1772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART IDLE line detected Flag is set or not
1776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_IsActiveFlag_IDLE
1777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_IDLE(USART_TypeDef *USARTx)
1781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_IDLE) == (USART_SR_IDLE));
1783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Read Data Register Not Empty Flag is set or not
1787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_IsActiveFlag_RXNE
1788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RXNE(USART_TypeDef *USARTx)
1792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_RXNE) == (USART_SR_RXNE));
1794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Transmission Complete Flag is set or not
1798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           TC            LL_USART_IsActiveFlag_TC
1799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TC(USART_TypeDef *USARTx)
1803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TC) == (USART_SR_TC));
1805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Transmit Data Register Empty Flag is set or not
1809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           TXE           LL_USART_IsActiveFlag_TXE
1810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_TXE(USART_TypeDef *USARTx)
1814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_TXE) == (USART_SR_TXE));
1816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART LIN Break Detection Flag is set or not
1820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_LIN_INSTANCE(USARTx) can be used to check whether or not
1821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         LIN feature is supported by the USARTx instance.
1822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           LBD           LL_USART_IsActiveFlag_LBD
1823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_LBD(USART_TypeDef *USARTx)
1827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 56


1828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_LBD) == (USART_SR_LBD));
1829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART CTS Flag is set or not
1833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           CTS           LL_USART_IsActiveFlag_nCTS
1836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_nCTS(USART_TypeDef *USARTx)
1840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->SR, USART_SR_CTS) == (USART_SR_CTS));
1842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Send Break Flag is set or not
1846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          SBK           LL_USART_IsActiveFlag_SBK
1847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_SBK(USART_TypeDef *USARTx)
1851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_SBK) == (USART_CR1_SBK));
1853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Check if the USART Receive Wake Up from mute mode Flag is set or not
1857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll CR1          RWU           LL_USART_IsActiveFlag_RWU
1858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsActiveFlag_RWU(USART_TypeDef *USARTx)
1862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   return (READ_BIT(USARTx->CR1, USART_CR1_RWU) == (USART_CR1_RWU));
1864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Parity Error Flag
1868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         NE, FE, ORE, IDLE would also be cleared.
1872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           PE            LL_USART_ClearFlag_PE
1873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_PE(USART_TypeDef *USARTx)
1877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 57


1885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Framing Error Flag
1887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, NE, ORE, IDLE would also be cleared.
1891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           FE            LL_USART_ClearFlag_FE
1892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_FE(USART_TypeDef *USARTx)
1896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Noise detected Flag
1906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, FE, ORE, IDLE would also be cleared.
1910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           NF            LL_USART_ClearFlag_NE
1911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_NE(USART_TypeDef *USARTx)
1915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear OverRun Error Flag
1925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, NE, FE, IDLE would also be cleared.
1929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           ORE           LL_USART_ClearFlag_ORE
1930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_ORE(USART_TypeDef *USARTx)
1934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 58


1942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear IDLE line detected Flag
1944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Clearing this flag is done by a read access to the USARTx_SR
1945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         register followed by a read access to the USARTx_DR register.
1946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @note   Please also consider that when clearing this flag, other flags as
1947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   *         PE, NE, FE, ORE would also be cleared.
1948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           IDLE          LL_USART_ClearFlag_IDLE
1949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_IDLE(USART_TypeDef *USARTx)
1953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   __IO uint32_t tmpreg;
1955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->SR;
1956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   tmpreg = USARTx->DR;
1958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   (void) tmpreg;
1959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear Transmission Complete Flag
1963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           TC            LL_USART_ClearFlag_TC
1964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_TC(USART_TypeDef *USARTx)
1968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   WRITE_REG(USARTx->SR, ~(USART_SR_TC));
1970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** }
1971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** 
1972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** /**
1973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @brief  Clear RX Not Empty Flag
1974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @rmtoll SR           RXNE          LL_USART_ClearFlag_RXNE
1975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @param  USARTx USART Instance
1976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   * @retval None
1977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   */
1978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ClearFlag_RXNE(USART_TypeDef *USARTx)
 296              		.loc 3 1978 22 view .LVU26
 297              	.LBB21:
1979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h **** {
1980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usart.h ****   WRITE_REG(USARTx->SR, ~(USART_SR_RXNE));
 298              		.loc 3 1980 3 view .LVU27
 299 0000 024B     		ldr	r3, .L20
 300 0002 6FF02002 		mvn	r2, #32
 301 0006 1A60     		str	r2, [r3]
 302              	.LVL3:
 303              		.loc 3 1980 3 is_stmt 0 view .LVU28
 304              	.LBE21:
 305              	.LBE20:
 120:Core/Src/stm32f4xx_it.c ****   // FLAG_SET(_USARTREG_, _RXITF_);
 121:Core/Src/stm32f4xx_it.c **** }
 306              		.loc 1 121 1 view .LVU29
 307 0008 7047     		bx	lr
 308              	.L21:
 309 000a 00BF     		.align	2
 310              	.L20:
 311 000c 00100140 		.word	1073811456
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 59


 312              		.cfi_endproc
 313              	.LFE1349:
 315              		.section	.text.RTC_Alarm_IRQHandler,"ax",%progbits
 316              		.align	1
 317              		.p2align 2,,3
 318              		.global	RTC_Alarm_IRQHandler
 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 322              		.fpu fpv4-sp-d16
 324              	RTC_Alarm_IRQHandler:
 325              	.LFB1350:
 122:Core/Src/stm32f4xx_it.c **** 
 123:Core/Src/stm32f4xx_it.c **** 
 124:Core/Src/stm32f4xx_it.c **** 
 125:Core/Src/stm32f4xx_it.c **** /**
 126:Core/Src/stm32f4xx_it.c ****   * @brief This function handles RTC alarms A and B interrupt through EXTI line 17.
 127:Core/Src/stm32f4xx_it.c ****   */
 128:Core/Src/stm32f4xx_it.c **** void RTC_Alarm_IRQHandler(void) {
 326              		.loc 1 128 33 is_stmt 1 view -0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 129:Core/Src/stm32f4xx_it.c ****   LL_EXTI_ClearFlag_0_31(LL_EXTI_LINE_17);
 330              		.loc 1 129 3 view .LVU31
 331              	.LVL4:
 332              	.LBB22:
 333              	.LBI22:
 911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_exti.h **** {
 334              		.loc 2 911 22 view .LVU32
 335              	.LBB23:
 336              		.loc 2 913 3 view .LVU33
 337 0000 144A     		ldr	r2, .L31
 338              	.LBE23:
 339              	.LBE22:
 128:Core/Src/stm32f4xx_it.c ****   LL_EXTI_ClearFlag_0_31(LL_EXTI_LINE_17);
 340              		.loc 1 128 33 is_stmt 0 view .LVU34
 341 0002 08B5     		push	{r3, lr}
 342              	.LCFI0:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 3, -8
 345              		.cfi_offset 14, -4
 346              	.LBB26:
 347              	.LBB24:
 348              		.loc 2 913 3 view .LVU35
 349 0004 4FF40031 		mov	r1, #131072
 350              	.LBE24:
 351              	.LBE26:
 352              	.LBB27:
 353              	.LBB28:
 354              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h"
   1:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @file    stm32f4xx_ll_rtc.h
   4:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief   Header file of RTC LL module.
   6:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   ******************************************************************************
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 60


   7:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @attention
   8:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *
   9:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *
  12:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   ******************************************************************************
  18:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  19:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  20:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #ifndef __STM32F4xx_LL_RTC_H
  22:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __STM32F4xx_LL_RTC_H
  23:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  24:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #ifdef __cplusplus
  25:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** extern "C" {
  26:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif
  27:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  28:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #include "stm32f4xx.h"
  30:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  31:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @addtogroup STM32F4xx_LL_Driver
  32:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
  33:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  34:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  35:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC)
  36:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  37:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL RTC
  38:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
  39:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  40:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  41:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Constants RTC Private Constants
  45:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
  46:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  47:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Masks Definition */
  48:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_INIT_MASK                 0xFFFFFFFFU
  49:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_RSF_MASK                  0xFFFFFF5FU
  50:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  51:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Write protection defines */
  52:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_DISABLE  ((uint8_t)0xFFU)
  53:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_1 ((uint8_t)0xCAU)
  54:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_WRITE_PROTECTION_ENABLE_2 ((uint8_t)0x53U)
  55:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  56:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Defines used to combine date & time */
  57:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_OFFSET_WEEKDAY            24U
  58:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_OFFSET_DAY                16U
  59:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_OFFSET_MONTH              8U
  60:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_OFFSET_HOUR               16U
  61:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define RTC_OFFSET_MINUTE             8U
  62:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  63:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 61


  64:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
  65:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  66:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  67:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Private macros ------------------------------------------------------------*/
  68:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  69:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_Private_Macros RTC Private Macros
  70:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
  71:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  72:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
  73:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
  74:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  75:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /*USE_FULL_LL_DRIVER*/
  76:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  77:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Exported types ------------------------------------------------------------*/
  78:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
  79:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_ES_INIT RTC Exported Init structure
  80:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
  81:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  82:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  83:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
  84:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  RTC Init structures definition
  85:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
  86:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** typedef struct
  87:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
  88:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint32_t HourFormat;   /*!< Specifies the RTC Hours Format.
  89:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               This parameter can be a value of @ref RTC_LL_EC_HOURFORMAT
  90:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               
  91:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
  92:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               @ref LL_RTC_SetHourFormat(). */
  93:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
  94:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint32_t AsynchPrescaler; /*!< Specifies the RTC Asynchronous Predivider value.
  95:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
  96:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               
  97:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
  98:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               @ref LL_RTC_SetAsynchPrescaler(). */
  99:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint32_t SynchPrescaler;  /*!< Specifies the RTC Synchronous Predivider value.
 101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               This parameter must be a number between Min_Data = 0x00 and Max_Data 
 102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               
 103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               This feature can be modified afterwards using unitary function
 104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                               @ref LL_RTC_SetSynchPrescaler(). */
 105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** } LL_RTC_InitTypeDef;
 106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  RTC Time structure definition
 109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** typedef struct
 111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint32_t TimeFormat; /*!< Specifies the RTC AM/PM Time.
 113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This parameter can be a value of @ref RTC_LL_EC_TIME_FORMAT
 114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t Hours;       /*!< Specifies the RTC Time Hours.
 118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 12 
 119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 23 
 120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 62


 121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t Minutes;     /*!< Specifies the RTC Time Minutes.
 124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t Seconds;     /*!< Specifies the RTC Time Seconds.
 129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This parameter must be a number between Min_Data = 0 and Max_Data = 59
 130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                             This feature can be modified afterwards using unitary function @ref LL_
 132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** } LL_RTC_TimeTypeDef;
 133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  RTC Date structure definition
 136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** typedef struct
 138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t WeekDay;  /*!< Specifies the RTC Date WeekDay.
 140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_WEEKDAY
 141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t Month;    /*!< Specifies the RTC Date Month.
 145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This parameter can be a value of @ref RTC_LL_EC_MONTH
 146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t Day;      /*!< Specifies the RTC Date Day.
 150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 1 and Max_Data = 31
 151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t Year;     /*!< Specifies the RTC Date Year.
 155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This parameter must be a number between Min_Data = 0 and Max_Data = 99
 156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                          This feature can be modified afterwards using unitary function @ref LL_RTC
 158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** } LL_RTC_DateTypeDef;
 159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  RTC Alarm structure definition
 162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** typedef struct
 164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   LL_RTC_TimeTypeDef AlarmTime;  /*!< Specifies the RTC Alarm Time members. */
 166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint32_t AlarmMask;            /*!< Specifies the RTC Alarm Masks.
 168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_MASK for
 169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       or @ref LL_RTC_ALMB_SetMask() for ALARM B
 172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                  */
 173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint32_t AlarmDateWeekDaySel;  /*!< Specifies the RTC Alarm is on day or WeekDay.
 175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       This parameter can be a value of @ref RTC_LL_EC_ALMA_WEEKDAY_
 176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 63


 178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_EnableWeekday() or @ref LL_RT
 179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                  */
 180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   uint8_t AlarmDateWeekDay;      /*!< Specifies the RTC Alarm Day/WeekDay.
 182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to day, this parameter  must be a 
 183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetDay() for ALARM B.
 186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       If AlarmDateWeekDaySel set to Weekday, this parameter can be 
 188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       This feature can be modified afterwards using unitary functio
 190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                       for ALARM A or @ref LL_RTC_ALMB_SetWeekDay() for ALARM B.
 191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                                  */
 192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** } LL_RTC_AlarmTypeDef;
 193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Exported constants --------------------------------------------------------*/
 200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Constants RTC Exported Constants
 201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(USE_FULL_LL_DRIVER)
 205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_FORMAT FORMAT
 206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_FORMAT_BIN                  0x000000000U /*!< Binary data format */
 209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_FORMAT_BCD                  0x000000001U /*!< BCD data format */
 210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_WEEKDAY_SELECTION RTC Alarm A Date WeekDay
 215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm A Date is selected */
 218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMAR_WDSEL        /*!< Alarm A WeekDay is selected
 219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_WEEKDAY_SELECTION RTC Alarm B Date WeekDay
 224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_DATE    0x00000000U             /*!< Alarm B Date is selected */
 227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_DATEWEEKDAYSEL_WEEKDAY RTC_ALRMBR_WDSEL        /*!< Alarm B WeekDay is selected
 228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* USE_FULL_LL_DRIVER */
 233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_GET_FLAG Get Flags Defines
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 64


 235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief    Flags defines which can be used with LL_RTC_ReadReg function
 236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_RECALPF                 RTC_ISR_RECALPF
 239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP3F                  RTC_ISR_TAMP3F
 240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP2F                  RTC_ISR_TAMP2F
 241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_TAMP1F                  RTC_ISR_TAMP1F
 242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_TSOVF                   RTC_ISR_TSOVF
 243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_TSF                     RTC_ISR_TSF
 244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_WUTF                    RTC_ISR_WUTF
 245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBF                   RTC_ISR_ALRBF
 246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAF                   RTC_ISR_ALRAF
 247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_INITF                   RTC_ISR_INITF
 248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_RSF                     RTC_ISR_RSF
 249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_INITS                   RTC_ISR_INITS
 250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_SHPF                    RTC_ISR_SHPF
 251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_WUTWF                   RTC_ISR_WUTWF
 252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRBWF                  RTC_ISR_ALRBWF
 253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ISR_ALRAWF                  RTC_ISR_ALRAWF
 254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_IT IT Defines
 259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief    IT defines which can be used with LL_RTC_ReadReg and  LL_RTC_WriteReg functions
 260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CR_TSIE                     RTC_CR_TSIE
 263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CR_WUTIE                    RTC_CR_WUTIE
 264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CR_ALRBIE                   RTC_CR_ALRBIE
 265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CR_ALRAIE                   RTC_CR_ALRAIE
 266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAFCR_TAMPIE               RTC_TAFCR_TAMPIE
 267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WEEKDAY  WEEK DAY
 272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_MONDAY              ((uint8_t)0x01U) /*!< Monday    */
 275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_TUESDAY             ((uint8_t)0x02U) /*!< Tuesday   */
 276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_WEDNESDAY           ((uint8_t)0x03U) /*!< Wednesday */
 277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_THURSDAY            ((uint8_t)0x04U) /*!< Thrusday  */
 278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_FRIDAY              ((uint8_t)0x05U) /*!< Friday    */
 279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SATURDAY            ((uint8_t)0x06U) /*!< Saturday  */
 280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WEEKDAY_SUNDAY              ((uint8_t)0x07U) /*!< Sunday    */
 281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_MONTH  MONTH
 286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_JANUARY               ((uint8_t)0x01U)  /*!< January   */
 289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_FEBRUARY              ((uint8_t)0x02U)  /*!< February  */
 290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_MARCH                 ((uint8_t)0x03U)  /*!< March     */
 291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_APRIL                 ((uint8_t)0x04U)  /*!< April     */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 65


 292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_MAY                   ((uint8_t)0x05U)  /*!< May       */
 293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_JUNE                  ((uint8_t)0x06U)  /*!< June      */
 294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_JULY                  ((uint8_t)0x07U)  /*!< July      */
 295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_AUGUST                ((uint8_t)0x08U)  /*!< August    */
 296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_SEPTEMBER             ((uint8_t)0x09U)  /*!< September */
 297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_OCTOBER               ((uint8_t)0x10U)  /*!< October   */
 298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_NOVEMBER              ((uint8_t)0x11U)  /*!< November  */
 299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_MONTH_DECEMBER              ((uint8_t)0x12U)  /*!< December  */
 300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_HOURFORMAT  HOUR FORMAT
 305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_24HOUR           0x00000000U           /*!< 24 hour/day format */
 308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_HOURFORMAT_AMPM             RTC_CR_FMT            /*!< AM/PM hour format */
 309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARMOUT  ALARM OUTPUT
 314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_DISABLE            0x00000000U             /*!< Output disabled */
 317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMA               RTC_CR_OSEL_0           /*!< Alarm A output enabled */
 318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_ALMB               RTC_CR_OSEL_1           /*!< Alarm B output enabled */
 319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALARMOUT_WAKEUP             RTC_CR_OSEL             /*!< Wakeup output enabled */
 320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALARM_OUTPUTTYPE  ALARM OUTPUT TYPE
 325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN  0x00000000U                          /*!< RTC_ALARM, whe
 328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL   RTC_TAFCR_ALARMOUTTYPE /*!< RTC_ALARM, when mapped on PC
 329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_PIN PIN
 334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_PIN_PC13                    RTC_TAFCR_PC13MODE    /*!< PC13 is forced to push-pull o
 337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_PIN_PC14                    RTC_TAFCR_PC14MODE    /*!< PC14 is forced to push-pull o
 338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_PIN_PC15                    RTC_TAFCR_PC15MODE    /*!< PC15 is forced to push-pull o
 339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_OUTPUTPOLARITY_PIN  OUTPUT POLARITY PIN
 344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_HIGH     0x00000000U           /*!< Pin is high when ALRAF/ALRBF/
 347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_OUTPUTPOLARITY_PIN_LOW      RTC_CR_POL            /*!< Pin is low when ALRAF/ALRBF/W
 348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 66


 349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIME_FORMAT TIME FORMAT
 353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_AM_OR_24        0x00000000U           /*!< AM or 24-hour format */
 356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TIME_FORMAT_PM              RTC_TR_PM             /*!< PM */
 357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_SHIFT_SECOND  SHIFT SECOND
 362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_DELAY          0x00000000U           /* Delay (seconds) = SUBFS / (PRED
 365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_SHIFT_SECOND_ADVANCE        RTC_SHIFTR_ADD1S      /* Advance (seconds) = (1 - (SUBFS
 366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_MASK  ALARMA MASK
 371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm A
 374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_DATEWEEKDAY       RTC_ALRMAR_MSK4         /*!< Date/day do not care in Ala
 375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_HOURS             RTC_ALRMAR_MSK3         /*!< Hours do not care in Alarm 
 376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_MINUTES           RTC_ALRMAR_MSK2         /*!< Minutes do not care in Alar
 377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_SECONDS           RTC_ALRMAR_MSK1         /*!< Seconds do not care in Alar
 378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_MASK_ALL               (RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | R
 379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMA_TIME_FORMAT  ALARMA TIME FORMAT
 384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
 387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMA_TIME_FORMAT_PM         RTC_ALRMAR_PM         /*!< PM */
 388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_MASK  ALARMB MASK
 393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_NONE              0x00000000U             /*!< No masks applied on Alarm B
 396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_DATEWEEKDAY       RTC_ALRMBR_MSK4         /*!< Date/day do not care in Ala
 397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_HOURS             RTC_ALRMBR_MSK3         /*!< Hours do not care in Alarm 
 398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_MINUTES           RTC_ALRMBR_MSK2         /*!< Minutes do not care in Alar
 399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_SECONDS           RTC_ALRMBR_MSK1         /*!< Seconds do not care in Alar
 400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_MASK_ALL               (RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | R
 401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_ALMB_TIME_FORMAT  ALARMB TIME FORMAT
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 67


 406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_AM         0x00000000U           /*!< AM or 24-hour format */
 409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ALMB_TIME_FORMAT_PM         RTC_ALRMBR_PM         /*!< PM */
 410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TIMESTAMP_EDGE  TIMESTAMP EDGE
 415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_RISING       0x00000000U           /*!< RTC_TS input rising edge gene
 418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TIMESTAMP_EDGE_FALLING      RTC_CR_TSEDGE         /*!< RTC_TS input falling edge gen
 419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TS_TIME_FORMAT  TIMESTAMP TIME FORMAT
 424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_AM           0x00000000U           /*!< AM or 24-hour format */
 427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TS_TIME_FORMAT_PM           RTC_TSTR_PM           /*!< PM */
 428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER  TAMPER
 433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_1                    RTC_TAFCR_TAMP1E /*!< RTC_TAMP1 input detection */
 436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_2                    RTC_TAFCR_TAMP2E /*!< RTC_TAMP2 input detection */
 438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_MASK  TAMPER MASK
 444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER1         RTC_TAFCR_TAMP1MF /*!< Tamper 1 event generates a trigge
 447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_MASK_TAMPER2         RTC_TAFCR_TAMP2MF /*!< Tamper 2 event generates a trigge
 449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_NOERASE  TAMPER NO ERASE
 455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER1      RTC_TAFCR_TAMP1NOERASE /*!< Tamper 1 event does not eras
 458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_NOERASE_TAMPER2      RTC_TAFCR_TAMP2NOERASE /*!< Tamper 2 event does not eras
 460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 68


 463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPPRCH)
 466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_DURATION  TAMPER DURATION
 467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_1RTCCLK     0x00000000U                             /*!< Tamper pins
 470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_2RTCCLK     RTC_TAFCR_TAMPPRCH_0  /*!< Tamper pins are pre-charged b
 471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_4RTCCLK     RTC_TAFCR_TAMPPRCH_1  /*!< Tamper pins are pre-charged b
 472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_DURATION_8RTCCLK     RTC_TAFCR_TAMPPRCH    /*!< Tamper pins are pre-charged b
 473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPPRCH */
 477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFLT)
 479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_FILTER  TAMPER FILTER
 480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_DISABLE       0x00000000U                              /*!< Tamper fil
 483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_2SAMPLE       RTC_TAFCR_TAMPFLT_0    /*!< Tamper is activated after 2 
 484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_4SAMPLE       RTC_TAFCR_TAMPFLT_1    /*!< Tamper is activated after 4 
 485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_FILTER_8SAMPLE       RTC_TAFCR_TAMPFLT      /*!< Tamper is activated after 8 
 486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFLT */
 490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFREQ)
 492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_SAMPLFREQDIV  TAMPER SAMPLING FREQUENCY DIVIDER
 493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_32768   0x00000000U                                             
 496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_16384   RTC_TAFCR_TAMPFREQ_0                           /*!< Each
 497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_8192    RTC_TAFCR_TAMPFREQ_1                           /*!< Each
 498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_4096    (RTC_TAFCR_TAMPFREQ_1 | RTC_TAFCR_TAMPFREQ_0) /*!< Each 
 499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_2048    RTC_TAFCR_TAMPFREQ_2                           /*!< Each
 500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_1024    (RTC_TAFCR_TAMPFREQ_2 | RTC_TAFCR_TAMPFREQ_0) /*!< Each 
 501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_512     (RTC_TAFCR_TAMPFREQ_2 | RTC_TAFCR_TAMPFREQ_1) /*!< Each 
 502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_SAMPLFREQDIV_256     RTC_TAFCR_TAMPFREQ                             /*!< Each
 503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFREQ */
 507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMPER_ACTIVELEVEL  TAMPER ACTIVE LEVEL
 509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP1    RTC_TAFCR_TAMP1TRG /*!< RTC_TAMP1 input falling edge (if
 512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
 513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TAMPER_ACTIVELEVEL_TAMP2    RTC_TAFCR_TAMP2TRG /*!< RTC_TAMP2 input falling edge (if
 514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
 515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_WAKEUPCLOCK_DIV  WAKEUP CLOCK DIV
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 69


 520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_16          0x00000000U                           /*!< RTC/16 clock 
 523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_8           (RTC_CR_WUCKSEL_0)                    /*!< RTC/8 clock i
 524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_4           (RTC_CR_WUCKSEL_1)                    /*!< RTC/4 clock i
 525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_DIV_2           (RTC_CR_WUCKSEL_1 | RTC_CR_WUCKSEL_0) /*!< RTC/2 clock i
 526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE          (RTC_CR_WUCKSEL_2)                    /*!< ck_spre (usua
 527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WAKEUPCLOCK_CKSPRE_WUT      (RTC_CR_WUCKSEL_2 | RTC_CR_WUCKSEL_1) /*!< ck_spre (usua
 528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_BKP  BACKUP
 533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR0                     0x00000000U
 536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR1                     0x00000001U
 537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR2                     0x00000002U
 538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR3                     0x00000003U
 539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR4                     0x00000004U
 540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if RTC_BKP_NUMBER > 5
 541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR5                     0x00000005U
 542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR6                     0x00000006U
 543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR7                     0x00000007U
 544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR8                     0x00000008U
 545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR9                     0x00000009U
 546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR10                    0x0000000AU
 547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR11                    0x0000000BU
 548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR12                    0x0000000CU
 549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR13                    0x0000000DU
 550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR14                    0x0000000EU
 551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR15                    0x0000000FU
 552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_BKP_NUMBER > 5 */
 553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if RTC_BKP_NUMBER > 16
 555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR16                    0x00000010U
 556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR17                    0x00000011U
 557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR18                    0x00000012U
 558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_BKP_DR19                    0x00000013U
 559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_BKP_NUMBER > 16 */
 560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_OUTPUT  Calibration output
 565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_NONE           0x00000000U                 /*!< Calibration output disa
 568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_1HZ            (RTC_CR_COE | RTC_CR_COSEL) /*!< Calibration output is 1
 569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_OUTPUT_512HZ          (RTC_CR_COE)                /*!< Calibration output is 5
 570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_SIGN Coarse digital calibration sign
 575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 70


 577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_SIGN_POSITIVE         0x00000000U           /*!< Positive calibration: calenda
 578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_SIGN_NEGATIVE         RTC_CALIBR_DCS        /*!< Negative calibration: calenda
 579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_INSERTPULSE  Calibration pulse insertion 
 584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_NONE      0x00000000U           /*!< No RTCCLK pulses are added */
 587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_INSERTPULSE_SET       RTC_CALR_CALP         /*!< One RTCCLK pulse is effective
 588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_CALIB_PERIOD  Calibration period
 593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_32SEC          0x00000000U           /*!< Use a 32-second calibration c
 596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_16SEC          RTC_CALR_CALW16       /*!< Use a 16-second calibration c
 597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_CALIB_PERIOD_8SEC           RTC_CALR_CALW8        /*!< Use a 8-second calibration cy
 598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TSINSEL  TIMESTAMP mapping
 603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TimeStampPin_Default        0x00000000U           /*!< Use RTC_AF1 as TIMESTAMP */
 606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_AF2_SUPPORT)
 607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TimeStampPin_Pos1           RTC_TAFCR_TSINSEL     /*!< Use RTC_AF2 as TIMESTAMP */
 608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif
 609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EC_TAMP1INSEL  TAMPER1 mapping
 614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TamperPin_Default           0x00000000U           /*!< Use RTC_AF1 as TAMPER1 */
 617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_AF2_SUPPORT)
 618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_TamperPin_Pos1              RTC_TAFCR_TAMP1INSEL  /*!< Use RTC_AF2 as TAMPER1 */
 619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif
 620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Exported macro ------------------------------------------------------------*/
 629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Macros RTC Exported Macros
 630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_WRITE_READ Common Write and read registers Macros
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 71


 634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Write a value in RTC register
 639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __REG__ Register to be written
 641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __VALUE__ Value to be written in the register
 642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Read a value in RTC register
 648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __INSTANCE__ RTC Instance
 649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __REG__ Register to be read
 650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Register value
 651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define LL_RTC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Convert Convert helper Macros
 658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from 2 digit decimal format to BCD format
 663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __VALUE__ Byte to be converted
 664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Converted byte
 665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BIN2BCD(__VALUE__) (uint8_t)((((__VALUE__) / 10U) << 4U) | ((__VALUE__) % 
 667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to convert a value from BCD format to 2 digit decimal format
 670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __VALUE__ BCD value to be converted
 671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Converted byte
 672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_CONVERT_BCD2BIN(__VALUE__) (uint8_t)(((uint8_t)((__VALUE__) & (uint8_t)0xF0U) >> (
 674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Date Date helper Macros
 680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve weekday.
 685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Date returned by @ref  LL_RTC_DATE_Get function.
 686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
 688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
 689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
 690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 72


 691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
 692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
 693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
 694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_GET_WEEKDAY(__RTC_DATE__) (((__RTC_DATE__) >> RTC_OFFSET_WEEKDAY) & 0x000000FFU)
 696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Year in BCD format
 699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Year in BCD format (0x00 . . . 0x99)
 701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_GET_YEAR(__RTC_DATE__) ((__RTC_DATE__) & 0x000000FFU)
 703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Month in BCD format
 706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
 709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
 710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
 711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
 712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
 713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
 714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
 715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
 716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
 717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
 718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
 719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
 720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_GET_MONTH(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_MONTH) & 0x000000FFU)
 722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve Day in BCD format
 725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __RTC_DATE__ Value returned by @ref  LL_RTC_DATE_Get
 726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Day in BCD format (0x01 . . . 0x31)
 727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_GET_DAY(__RTC_DATE__) (((__RTC_DATE__) >>RTC_OFFSET_DAY) & 0x000000FFU)
 729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EM_Time Time helper Macros
 735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve hour in BCD format
 740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Hours in BCD format (0x01. . .0x12 or between Min_Data=0x00 and Max_Data=0x23)
 742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_GET_HOUR(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_HOUR) & 0x000000FFU)
 744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve minute in BCD format
 747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 73


 748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Minutes in BCD format (0x00. . .0x59)
 749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_GET_MINUTE(__RTC_TIME__) (((__RTC_TIME__) >> RTC_OFFSET_MINUTE) & 0x000000FFU)
 751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Helper macro to retrieve second in BCD format
 754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  __RTC_TIME__ RTC time returned by @ref LL_RTC_TIME_Get function
 755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Seconds in  format (0x00. . .0x59)
 756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #define __LL_RTC_GET_SECOND(__RTC_TIME__) ((__RTC_TIME__) & 0x000000FFU)
 758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
 765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /* Exported functions --------------------------------------------------------*/
 768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_Exported_Functions RTC Exported Functions
 769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Configuration Configuration
 773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
 774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Hours format (24 hour/day or AM/PM hour format)
 778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
 780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_SetHourFormat
 781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  HourFormat This parameter can be one of the following values:
 783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetHourFormat(RTC_TypeDef *RTCx, uint32_t HourFormat)
 788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_FMT, HourFormat);
 790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Hours format (24 hour/day or AM/PM hour format)
 794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           FMT           LL_RTC_GetHourFormat
 795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_24HOUR
 798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_HOURFORMAT_AMPM
 799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetHourFormat(RTC_TypeDef *RTCx)
 801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_FMT));
 803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 74


 805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Select the flag to be routed to RTC_ALARM output
 807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_SetAlarmOutEvent
 809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  AlarmOutput This parameter can be one of the following values:
 811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutEvent(RTC_TypeDef *RTCx, uint32_t AlarmOutput)
 818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_OSEL, AlarmOutput);
 820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get the flag to be routed to RTC_ALARM output
 824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           OSEL          LL_RTC_GetAlarmOutEvent
 825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_DISABLE
 828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMA
 829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_ALMB
 830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARMOUT_WAKEUP
 831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutEvent(RTC_TypeDef *RTCx)
 833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_OSEL));
 835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set RTC_ALARM output type (ALARM in push-pull or open-drain output)
 839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Used only when RTC_ALARM is mapped on PC13
 840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   If all RTC alternate functions are disabled and PC13MODE = 1, PC13VALUE configures the
 841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         PC13 output data
 842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        ALARMOUTTYPE  LL_RTC_SetAlarmOutputType
 843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Output This parameter can be one of the following values:
 845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAlarmOutputType(RTC_TypeDef *RTCx, uint32_t Output)
 850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_ALARMOUTTYPE, Output);
 852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get RTC_ALARM output type (ALARM in push-pull or open-drain output)
 856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   used only when RTC_ALARM is mapped on PC13
 857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   If all RTC alternate functions are disabled and PC13MODE = 1, PC13VALUE configures the
 858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         PC13 output data
 859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        ALARMOUTTYPE  LL_RTC_GetAlarmOutputType
 860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 75


 862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_OPENDRAIN
 863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALARM_OUTPUTTYPE_PUSHPULL
 864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAlarmOutputType(RTC_TypeDef *RTCx)
 866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_ALARMOUTTYPE));
 868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable push-pull output on PC13, PC14 and/or PC15
 872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   PC13 forced to push-pull output if all RTC alternate functions are disabled
 873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   PC14 and PC15 forced to push-pull output if LSE is disabled
 874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        PC13MODE  LL_RTC_EnablePushPullMode\n
 875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14MODE  LL_RTC_EnablePushPullMode\n
 876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        PC15MODE  LL_RTC_EnablePushPullMode
 877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC13
 880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnablePushPullMode(RTC_TypeDef *RTCx, uint32_t PinMask)
 885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, PinMask);
 887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable push-pull output on PC13, PC14 and/or PC15
 891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   PC13, PC14 and/or PC15 are controlled by the GPIO configuration registers.
 892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         Consequently PC13, PC14 and/or PC15 are floating in Standby mode.
 893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        PC13MODE      LL_RTC_DisablePushPullMode\n
 894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR        PC14MODE      LL_RTC_DisablePushPullMode\n
 895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR        PC15MODE      LL_RTC_DisablePushPullMode
 896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC13
 899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisablePushPullMode(RTC_TypeDef* RTCx, uint32_t PinMask)
 904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, PinMask);
 906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set PC14 and/or PC15 to high level.
 910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Output data configuration is possible if the LSE is disabled and PushPull output is ena
 911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14VALUE     LL_RTC_SetOutputPin\n
 912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR        PC15VALUE     LL_RTC_SetOutputPin
 913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 76


 919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPin(RTC_TypeDef* RTCx, uint32_t PinMask)
 920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, (PinMask >> 1));
 922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set PC14 and/or PC15 to low level.
 926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Output data configuration is possible if the LSE is disabled and PushPull output is ena
 927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR        PC14VALUE     LL_RTC_ResetOutputPin\n
 928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR        PC15VALUE     LL_RTC_ResetOutputPin
 929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  PinMask This parameter can be a combination of the following values:
 931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC14
 932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_PIN_PC15
 933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ResetOutputPin(RTC_TypeDef* RTCx, uint32_t PinMask)
 936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, (PinMask >> 1));
 938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable initialization mode
 942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Initialization mode is used to program time and date register (RTC_TR and RTC_DR)
 943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         and prescaler register (RTC_PRER).
 944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         Counters are stopped and start counting from the new value when INIT is reset.
 945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_EnableInitMode
 946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableInitMode(RTC_TypeDef *RTCx)
 950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   /* Set the Initialization mode */
 952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, RTC_INIT_MASK);
 953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable initialization mode (Free running mode)
 957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          INIT          LL_RTC_DisableInitMode
 958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
 960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableInitMode(RTC_TypeDef *RTCx)
 962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   /* Exit Initialization mode */
 964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (uint32_t)~RTC_ISR_INIT);
 965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Output polarity (pin is low when ALRAF/ALRBF/WUTF is asserted)
 969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_SetOutputPolarity
 971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Polarity This parameter can be one of the following values:
 973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 77


 976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetOutputPolarity(RTC_TypeDef *RTCx, uint32_t Polarity)
 978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_POL, Polarity);
 980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 981:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 982:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 983:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Output polarity
 984:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           POL           LL_RTC_GetOutputPolarity
 985:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
 986:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
 987:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_HIGH
 988:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_OUTPUTPOLARITY_PIN_LOW
 989:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
 990:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetOutputPolarity(RTC_TypeDef *RTCx)
 991:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 992:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_POL));
 993:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 994:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
 995:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
 996:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable Bypass the shadow registers
 997:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
 998:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_EnableShadowRegBypass
 999:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1000:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1001:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1002:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableShadowRegBypass(RTC_TypeDef *RTCx)
1003:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1004:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BYPSHAD);
1005:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1006:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1007:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1008:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable Bypass the shadow registers
1009:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_DisableShadowRegBypass
1010:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1011:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1012:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1013:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableShadowRegBypass(RTC_TypeDef *RTCx)
1014:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1015:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BYPSHAD);
1016:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1017:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1018:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1019:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Check if Shadow registers bypass is enabled or not.
1020:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           BYPSHAD       LL_RTC_IsShadowRegBypassEnabled
1021:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1022:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1023:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1024:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsShadowRegBypassEnabled(RTC_TypeDef *RTCx)
1025:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1026:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BYPSHAD) == (RTC_CR_BYPSHAD));
1027:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1028:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1029:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1030:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable RTC_REFIN reference clock detection (50 or 60 Hz)
1031:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1032:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 78


1033:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_EnableRefClock
1034:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1035:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1036:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1037:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableRefClock(RTC_TypeDef *RTCx)
1038:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1039:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_REFCKON);
1040:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1041:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1042:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1043:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable RTC_REFIN reference clock detection (50 or 60 Hz)
1044:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1045:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1046:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           REFCKON       LL_RTC_DisableRefClock
1047:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1048:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1049:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1050:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableRefClock(RTC_TypeDef *RTCx)
1051:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1052:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_REFCKON);
1053:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1054:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1055:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1056:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Asynchronous prescaler factor
1057:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_SetAsynchPrescaler
1058:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1059:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  AsynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7F
1060:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1061:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1062:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetAsynchPrescaler(RTC_TypeDef *RTCx, uint32_t AsynchPrescaler)
1063:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1064:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_A, AsynchPrescaler << RTC_PRER_PREDIV_A_Pos);
1065:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1066:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1067:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1068:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Synchronous prescaler factor
1069:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_SetSynchPrescaler
1070:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1071:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  SynchPrescaler Value between Min_Data = 0 and Max_Data = 0x7FFF
1072:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1073:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1074:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_SetSynchPrescaler(RTC_TypeDef *RTCx, uint32_t SynchPrescaler)
1075:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1076:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->PRER, RTC_PRER_PREDIV_S, SynchPrescaler);
1077:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1078:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1079:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1080:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Asynchronous prescaler factor
1081:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_A      LL_RTC_GetAsynchPrescaler
1082:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1083:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7F
1084:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1085:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetAsynchPrescaler(RTC_TypeDef *RTCx)
1086:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1087:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_A) >> RTC_PRER_PREDIV_A_Pos);
1088:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1089:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 79


1090:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1091:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Synchronous prescaler factor
1092:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll PRER         PREDIV_S      LL_RTC_GetSynchPrescaler
1093:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1094:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data = 0 and Max_Data = 0x7FFF
1095:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1096:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_GetSynchPrescaler(RTC_TypeDef *RTCx)
1097:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1098:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->PRER, RTC_PRER_PREDIV_S));
1099:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable the write protection for RTC registers.
1103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_EnableWriteProtection
1104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_EnableWriteProtection(RTC_TypeDef *RTCx)
1108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_DISABLE);
1110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable the write protection for RTC registers.
1114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll WPR          KEY           LL_RTC_DisableWriteProtection
1115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DisableWriteProtection(RTC_TypeDef *RTCx)
1119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_1);
1121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->WPR, RTC_WRITE_PROTECTION_ENABLE_2);
1122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
1126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Time Time
1129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
1130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set time format (AM/24-hour or PM notation)
1134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_SetFormat
1137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, RTC_TR_PM, TimeFormat);
1146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 80


1147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get time format (AM or PM notation)
1150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_GetFormat
1155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetFormat(RTC_TypeDef *RTCx)
1161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, RTC_TR_PM));
1163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Hours in BCD format
1167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert hour from binary to BCD for
1170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_SetHour\n
1171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_SetHour
1172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_HT | RTC_TR_HU),
1179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos)));
1180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Hours in BCD format
1184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert hour from BCD to
1189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       Binary format
1190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_GetHour\n
1191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_GetHour
1192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetHour(RTC_TypeDef *RTCx)
1196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU))) >> RTC_TR_HU_Pos);
1198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Minutes in BCD format
1202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 81


1204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_SetMinute\n
1206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_SetMinute
1207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU),
1214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos))
1215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Minutes in BCD format
1219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert minute from BCD
1224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       to Binary format
1225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           MNT           LL_RTC_TIME_GetMinute\n
1226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_GetMinute
1227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetMinute(RTC_TypeDef *RTCx)
1231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, (RTC_TR_MNT | RTC_TR_MNU))>> RTC_TR_MNU_Pos);
1233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Seconds in BCD format
1237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_SetSecond\n
1241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_SetSecond
1242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
1247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_ST | RTC_TR_SU),
1249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos)));
1250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Seconds in BCD format
1254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD
1259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       to Binary format
1260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           ST            LL_RTC_TIME_GetSecond\n
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 82


1261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_GetSecond
1262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSecond(RTC_TypeDef *RTCx)
1266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TR, (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
1268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set time (hour, minute and second) in BCD format
1272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
1274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note TimeFormat and Hours should follow the same format
1275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           PM            LL_RTC_TIME_Config\n
1276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           HT            LL_RTC_TIME_Config\n
1277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Config\n
1278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Config\n
1279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Config\n
1280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Config\n
1281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Config
1282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_AM_OR_24
1285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIME_FORMAT_PM
1286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Config(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours, ui
1292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t temp = 0U;
1294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   temp = Format12_24                                                                               
1296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Hours & 0xF0U) << (RTC_TR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_TR_HU_Pos))     | \
1297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_TR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_TR_MNU_Pos)) | \
1298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_TR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_TR_SU_Pos));
1299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TR, (RTC_TR_PM | RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | R
1300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get time (hour, minute and second) in BCD format
1304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Read either RTC_SSR or RTC_TR locks the values in the higher-order calendar
1307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       shadow registers until RTC_DR is read (LL_RTC_ReadReg(RTC, DR)).
1308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       are available to get independently each parameter.
1310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TR           HT            LL_RTC_TIME_Get\n
1311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           HU            LL_RTC_TIME_Get\n
1312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           MNT           LL_RTC_TIME_Get\n
1313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           MNU           LL_RTC_TIME_Get\n
1314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           ST            LL_RTC_TIME_Get\n
1315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TR           SU            LL_RTC_TIME_Get
1316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds (Format: 0x00HHMMSS).
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 83


1318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_Get(RTC_TypeDef *RTCx)
1320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t temp = 0U;
1322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   
1323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   temp = READ_BIT(RTCx->TR, (RTC_TR_HT | RTC_TR_HU | RTC_TR_MNT | RTC_TR_MNU | RTC_TR_ST | RTC_TR_S
1324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((((((temp & RTC_TR_HT) >> RTC_TR_HT_Pos) << 4U) | ((temp & RTC_TR_HU) >> RTC_TR
1325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                     (((((temp & RTC_TR_MNT) >> RTC_TR_MNT_Pos) << 4U) | ((temp & RTC_TR_MNU) >> RTC
1326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                     ((((temp & RTC_TR_ST) >> RTC_TR_ST_Pos) << 4U) | ((temp & RTC_TR_SU) >> RTC_TR_
1327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Memorize whether the daylight saving time change has been performed
1331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_EnableDayLightStore
1333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_EnableDayLightStore(RTC_TypeDef *RTCx)
1337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_BKP);
1339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable memorization whether the daylight saving time change has been performed.
1343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_DisableDayLightStore
1345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DisableDayLightStore(RTC_TypeDef *RTCx)
1349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_BKP);
1351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Check if RTC Day Light Saving stored operation has been enabled or not
1355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           BKP           LL_RTC_TIME_IsDayLightStoreEnabled
1356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
1358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_IsDayLightStoreEnabled(RTC_TypeDef *RTCx)
1360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_BKP) == (RTC_CR_BKP));
1362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Subtract 1 hour (winter time change)
1366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           SUB1H         LL_RTC_TIME_DecHour
1368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_DecHour(RTC_TypeDef *RTCx)
1372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_SUB1H);
1374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 84


1375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Add 1 hour (summer time change)
1378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           ADD1H         LL_RTC_TIME_IncHour
1380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_IncHour(RTC_TypeDef *RTCx)
1384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ADD1H);
1386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Sub second value in the synchronous prescaler counter.
1390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note  You can use both SubSeconds value and SecondFraction (PREDIV_S through
1391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *        LL_RTC_GetSynchPrescaler function) terms returned to convert Calendar
1392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *        SubSeconds value in second fraction ratio with time unit following
1393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *        generic formula:
1394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *          ==> Seconds fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1
1395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *        This conversion can be performed only if no shift operation is pending
1396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *        (ie. SHFP=0) when PREDIV_S >= SS.
1397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll SSR          SS            LL_RTC_TIME_GetSubSecond
1398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Sub second value (number between 0 and 65535)
1400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TIME_GetSubSecond(RTC_TypeDef *RTCx)
1402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->SSR, RTC_SSR_SS));
1404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Synchronize to a remote clock with a high degree of precision.
1408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   This operation effectively subtracts from (delays) or advance the clock of a fraction o
1409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   When REFCKON is set, firmware must not write to Shift control register.
1411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll SHIFTR       ADD1S         LL_RTC_TIME_Synchronize\n
1412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         SHIFTR       SUBFS         LL_RTC_TIME_Synchronize
1413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  ShiftSecond This parameter can be one of the following values:
1415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_DELAY
1416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_SHIFT_SECOND_ADVANCE
1417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Fraction Number of Seconds Fractions (any value from 0 to 0x7FFF)
1418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TIME_Synchronize(RTC_TypeDef *RTCx, uint32_t ShiftSecond, uint32_t Frac
1421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->SHIFTR, ShiftSecond | Fraction);
1423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
1427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Date Date
1430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
1431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 85


1432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Year in BCD format
1435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Year from binary to BCD for
1436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_SetYear\n
1437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_SetYear
1438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetYear(RTC_TypeDef *RTCx, uint32_t Year)
1443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_YT | RTC_DR_YU),
1445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos)));
1446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Year in BCD format
1450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Year from BCD to Binary for
1453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           YT            LL_RTC_DATE_GetYear\n
1454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_GetYear
1455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x99
1457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetYear(RTC_TypeDef *RTCx)
1459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->DR, (RTC_DR_YT | RTC_DR_YU))) >> RTC_DR_YU_Pos);
1461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Week day
1465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_SetWeekDay
1466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, RTC_DR_WDU, WeekDay << RTC_DR_WDU_Pos);
1480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Week day
1484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_GetWeekDay
1487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 86


1489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetWeekDay(RTC_TypeDef *RTCx)
1498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->DR, RTC_DR_WDU) >> RTC_DR_WDU_Pos);
1500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Month in BCD format
1504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Month from binary to BCD fo
1505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_SetMonth\n
1506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_SetMonth
1507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetMonth(RTC_TypeDef *RTCx, uint32_t Month)
1524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_MT | RTC_DR_MU),
1526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)));
1527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Month in BCD format
1531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
1534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           MT            LL_RTC_DATE_GetMonth\n
1535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_GetMonth
1536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 87


1546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetMonth(RTC_TypeDef *RTCx)
1552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->DR, (RTC_DR_MT | RTC_DR_MU)))>> RTC_DR_MU_Pos);
1554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Day in BCD format
1558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_SetDay\n
1560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_SetDay
1561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_DT | RTC_DR_DU),
1568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos)));
1569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Day in BCD format
1573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           DT            LL_RTC_DATE_GetDay\n
1577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_GetDay
1578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_GetDay(RTC_TypeDef *RTCx)
1582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->DR, (RTC_DR_DT | RTC_DR_DU))) >> RTC_DR_DU_Pos);
1584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set date (WeekDay, Day, Month and Year) in BCD format
1588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Config\n
1589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Config\n
1590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Config\n
1591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Config\n
1592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Config\n
1593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Config\n
1594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Config
1595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 88


1603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Month This parameter can be one of the following values:
1606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
1607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
1608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
1609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
1610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
1611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
1612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
1613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
1614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
1615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
1616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
1617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
1618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Year Value between Min_Data=0x00 and Max_Data=0x99
1619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_DATE_Config(RTC_TypeDef *RTCx, uint32_t WeekDay, uint32_t Day, uint32_t
1622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t temp = 0U;
1624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   temp = (WeekDay << RTC_DR_WDU_Pos)                                                        | \
1626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Year & 0xF0U) << (RTC_DR_YT_Pos - 4U)) | ((Year & 0x0FU) << RTC_DR_YU_Pos))   | \
1627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Month & 0xF0U) << (RTC_DR_MT_Pos - 4U)) | ((Month & 0x0FU) << RTC_DR_MU_Pos)) | \
1628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Day & 0xF0U) << (RTC_DR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_DR_DU_Pos));
1629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT | RT
1631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get date (WeekDay, Day, Month and Year) in BCD format
1635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note if shadow mode is disabled (BYPSHAD=0), need to check if RSF flag is set
1636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       before reading this bit
1637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_YEAR, __LL_RTC_GET_MONTH,
1638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
1639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll DR           WDU           LL_RTC_DATE_Get\n
1640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           MT            LL_RTC_DATE_Get\n
1641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           MU            LL_RTC_DATE_Get\n
1642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           DT            LL_RTC_DATE_Get\n
1643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           DU            LL_RTC_DATE_Get\n
1644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           YT            LL_RTC_DATE_Get\n
1645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         DR           YU            LL_RTC_DATE_Get
1646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Combination of WeekDay, Day, Month and Year (Format: 0xWWDDMMYY).
1648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_DATE_Get(RTC_TypeDef *RTCx)
1650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t temp = 0U;
1652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   
1653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   temp = READ_BIT(RTCx->DR, (RTC_DR_WDU | RTC_DR_MT | RTC_DR_MU | RTC_DR_DT | RTC_DR_DU | RTC_DR_YT
1654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_DR_WDU) >> RTC_DR_WDU_Pos) << RTC_OFFSET_WEEKDAY) | \
1655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                     (((((temp & RTC_DR_DT) >> RTC_DR_DT_Pos) << 4U) | ((temp & RTC_DR_DU) >> RTC_DR
1656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                     (((((temp & RTC_DR_MT) >> RTC_DR_MT_Pos) << 4U) | ((temp & RTC_DR_MU) >> RTC_DR
1657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                     ((((temp & RTC_DR_YT) >> RTC_DR_YT_Pos) << 4U) | ((temp & RTC_DR_YU) >> RTC_DR_
1658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 89


1660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
1662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMA ALARMA
1665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
1666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable Alarm A
1670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Enable
1672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Enable(RTC_TypeDef *RTCx)
1676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRAE);
1678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable Alarm A
1682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
1683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           ALRAE         LL_RTC_ALMA_Disable
1684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_Disable(RTC_TypeDef *RTCx)
1688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRAE);
1690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Specify the Alarm A masks.
1694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_SetMask\n
1695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_SetMask\n
1696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_SetMask\n
1697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_SetMask
1698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
1700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
1702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
1706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
1709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RTC_ALRMAR_MSK1, M
1711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get the Alarm A masks.
1715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       MSK4          LL_RTC_ALMA_GetMask\n
1716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MSK3          LL_RTC_ALMA_GetMask\n
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 90


1717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MSK2          LL_RTC_ALMA_GetMask\n
1718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MSK1          LL_RTC_ALMA_GetMask
1719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
1721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_NONE
1722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_DATEWEEKDAY
1723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_HOURS
1724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_MINUTES
1725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_SECONDS
1726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_MASK_ALL
1727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMask(RTC_TypeDef *RTCx)
1729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_MSK4 | RTC_ALRMAR_MSK3 | RTC_ALRMAR_MSK2 | RT
1731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable AlarmA Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
1735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_EnableWeekday
1736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_EnableWeekday(RTC_TypeDef *RTCx)
1740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
1742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable AlarmA Week day selection (DU[3:0] represents the date )
1746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       WDSEL         LL_RTC_ALMA_DisableWeekday
1747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_DisableWeekday(RTC_TypeDef *RTCx)
1751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMAR, RTC_ALRMAR_WDSEL);
1753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM A Day in BCD format
1757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
1758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_SetDay\n
1759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_SetDay
1760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
1762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
1765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU),
1767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_ALRMAR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_ALRMAR_DU_Pos)));
1768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM A Day in BCD format
1772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
1773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       DT            LL_RTC_ALMA_GetDay\n
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 91


1774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       DU            LL_RTC_ALMA_GetDay
1775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
1777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetDay(RTC_TypeDef *RTCx)
1779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_DT | RTC_ALRMAR_DU))) >> RTC_ALRMAR_DU_Pos)
1781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM A Weekday
1785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_SetWeekDay
1786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
1788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
1798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_DU, WeekDay << RTC_ALRMAR_DU_Pos);
1800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM A Weekday
1804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       DU            LL_RTC_ALMA_GetWeekDay
1805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
1808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
1809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
1810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
1811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
1812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
1813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
1814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetWeekDay(RTC_TypeDef *RTCx)
1816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_DU) >> RTC_ALRMAR_DU_Pos);
1818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Alarm A time format (AM/24-hour or PM notation)
1822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_SetTimeFormat
1823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
1825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
1830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 92


1831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM, TimeFormat);
1832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm A time format (AM or PM notation)
1836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_GetTimeFormat
1837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
1839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTimeFormat(RTC_TypeDef *RTCx)
1843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMAR, RTC_ALRMAR_PM));
1845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM A Hours in BCD format
1849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
1850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_SetHour\n
1851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_SetHour
1852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
1854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
1857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU),
1859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_ALRMAR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALRMAR_HU_Pos
1860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM A Hours in BCD format
1864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
1865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetHour\n
1866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetHour
1867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
1869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetHour(RTC_TypeDef *RTCx)
1871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(( READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_HT | RTC_ALRMAR_HU))) >> RTC_ALRMAR_HU_Pos
1873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM A Minutes in BCD format
1877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
1878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_SetMinute\n
1879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_SetMinute
1880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
1885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU),
1887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_M
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 93


1888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM A Minutes in BCD format
1892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
1893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       MNT           LL_RTC_ALMA_GetMinute\n
1894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetMinute
1895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetMinute(RTC_TypeDef *RTCx)
1899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU))) >> RTC_ALRMAR_MNU_P
1901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM A Seconds in BCD format
1905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
1906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_SetSecond\n
1907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_SetSecond
1908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
1913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU),
1915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU
1916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM A Seconds in BCD format
1920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
1921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       ST            LL_RTC_ALMA_GetSecond\n
1922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetSecond
1923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
1925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSecond(RTC_TypeDef *RTCx)
1927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMAR, (RTC_ALRMAR_ST | RTC_ALRMAR_SU))) >> RTC_ALRMAR_SU_Pos)
1929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Alarm A Time (hour, minute and second) in BCD format
1933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       PM            LL_RTC_ALMA_ConfigTime\n
1934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       HT            LL_RTC_ALMA_ConfigTime\n
1935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_ConfigTime\n
1936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_ConfigTime\n
1937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_ConfigTime\n
1938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_ConfigTime\n
1939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_ConfigTime
1940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
1942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_AM
1943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMA_TIME_FORMAT_PM
1944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 94


1945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
1946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
1947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
1950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t temp = 0U;
1952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   temp = Format12_24 | (((Hours & 0xF0U) << (RTC_ALRMAR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALR
1954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMAR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMAR_MNU_P
1955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMAR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMAR_SU_Pos
1956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMAR, RTC_ALRMAR_PM | RTC_ALRMAR_HT | RTC_ALRMAR_HU | RTC_ALRMAR_MNT | RTC_ALR
1958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
1962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
1963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * are available to get independently each parameter.
1964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMAR       HT            LL_RTC_ALMA_GetTime\n
1965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       HU            LL_RTC_ALMA_GetTime\n
1966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MNT           LL_RTC_ALMA_GetTime\n
1967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       MNU           LL_RTC_ALMA_GetTime\n
1968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       ST            LL_RTC_ALMA_GetTime\n
1969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMAR       SU            LL_RTC_ALMA_GetTime
1970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
1972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetTime(RTC_TypeDef *RTCx)
1974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMA_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMA_GetMinute(RTCx) <
1976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Alarm A Mask the most-significant bits starting at this bit
1980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note This register can be written only when ALRAE is reset in RTC_CR register,
1981:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       or in initialization mode.
1982:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_SetSubSecondMask
1983:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1984:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Mask Value between Min_Data=0x00 and Max_Data=0xF
1985:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
1986:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1987:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
1988:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
1989:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS, Mask << RTC_ALRMASSR_MASKSS_Pos);
1990:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
1991:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
1992:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
1993:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm A Mask the most-significant bits starting at this bit
1994:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMASSR     MASKSS        LL_RTC_ALMA_GetSubSecondMask
1995:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
1996:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xF
1997:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
1998:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecondMask(RTC_TypeDef *RTCx)
1999:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2000:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_MASKSS) >> RTC_ALRMASSR_MASKSS_Pos);
2001:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 95


2002:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2003:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2004:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Alarm A Sub seconds value
2005:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_SetSubSecond
2006:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2007:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
2008:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2009:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2010:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMA_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2011:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2012:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMASSR, RTC_ALRMASSR_SS, Subsecond);
2013:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2014:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2015:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2016:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm A Sub seconds value
2017:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMASSR     SS            LL_RTC_ALMA_GetSubSecond
2018:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2019:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
2020:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2021:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMA_GetSubSecond(RTC_TypeDef *RTCx)
2022:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2023:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMASSR, RTC_ALRMASSR_SS));
2024:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2025:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2026:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2027:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
2028:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2029:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2030:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_ALARMB ALARMB
2031:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
2032:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2033:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2034:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2035:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable Alarm B
2036:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2037:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           ALRBE         LL_RTC_ALMB_Enable
2038:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2039:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2040:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2041:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Enable(RTC_TypeDef *RTCx)
2042:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2043:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_ALRBE);
2044:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2045:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2046:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2047:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable Alarm B
2048:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2049:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           ALRBE         LL_RTC_ALMB_Disable
2050:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2051:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2052:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2053:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_Disable(RTC_TypeDef *RTCx)
2054:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2055:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_ALRBE);
2056:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2057:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2058:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 96


2059:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Specify the Alarm B masks.
2060:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       MSK4          LL_RTC_ALMB_SetMask\n
2061:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MSK3          LL_RTC_ALMB_SetMask\n
2062:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MSK2          LL_RTC_ALMB_SetMask\n
2063:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MSK1          LL_RTC_ALMB_SetMask
2064:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2065:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Mask This parameter can be a combination of the following values:
2066:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
2067:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
2068:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
2069:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
2070:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
2071:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
2072:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2073:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2074:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMask(RTC_TypeDef *RTCx, uint32_t Mask)
2075:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2076:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RTC_ALRMBR_MSK1, M
2077:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2078:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2079:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2080:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get the Alarm B masks.
2081:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       MSK4          LL_RTC_ALMB_GetMask\n
2082:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MSK3          LL_RTC_ALMB_GetMask\n
2083:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MSK2          LL_RTC_ALMB_GetMask\n
2084:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MSK1          LL_RTC_ALMB_GetMask
2085:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2086:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be can be a combination of the following values:
2087:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_NONE
2088:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_DATEWEEKDAY
2089:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_HOURS
2090:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_MINUTES
2091:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_SECONDS
2092:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_MASK_ALL
2093:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2094:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMask(RTC_TypeDef *RTCx)
2095:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2096:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_MSK4 | RTC_ALRMBR_MSK3 | RTC_ALRMBR_MSK2 | RT
2097:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2098:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2099:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable AlarmB Week day selection (DU[3:0] represents the week day. DT[1:0] is do not ca
2101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       WDSEL         LL_RTC_ALMB_EnableWeekday
2102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_EnableWeekday(RTC_TypeDef *RTCx)
2106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
2108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable AlarmB Week day selection (DU[3:0] represents the date )
2112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       WDSEL         LL_RTC_ALMB_DisableWeekday
2113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 97


2116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_DisableWeekday(RTC_TypeDef *RTCx)
2117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->ALRMBR, RTC_ALRMBR_WDSEL);
2119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM B Day in BCD format
2123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Day from binary to BCD form
2124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       DT            LL_RTC_ALMB_SetDay\n
2125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       DU            LL_RTC_ALMB_SetDay
2126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Day Value between Min_Data=0x01 and Max_Data=0x31
2128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetDay(RTC_TypeDef *RTCx, uint32_t Day)
2131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTC->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU),
2133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Day & 0xF0U) << (RTC_ALRMBR_DT_Pos - 4U)) | ((Day & 0x0FU) << RTC_ALRMBR_DU_Pos)));
2134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM B Day in BCD format
2138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       DT            LL_RTC_ALMB_GetDay\n
2140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       DU            LL_RTC_ALMB_GetDay
2141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetDay(RTC_TypeDef *RTCx)
2145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(( READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_DT | RTC_ALRMBR_DU))) >> RTC_ALRMBR_DU_Pos
2147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM B Weekday
2151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       DU            LL_RTC_ALMB_SetWeekDay
2152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  WeekDay This parameter can be one of the following values:
2154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetWeekDay(RTC_TypeDef *RTCx, uint32_t WeekDay)
2164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_DU, WeekDay << RTC_ALRMBR_DU_Pos);
2166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM B Weekday
2170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       DU            LL_RTC_ALMB_GetWeekDay
2171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 98


2173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetWeekDay(RTC_TypeDef *RTCx)
2182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_DU) >> RTC_ALRMBR_DU_Pos);
2184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM B time format (AM/24-hour or PM notation)
2188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_SetTimeFormat
2189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  TimeFormat This parameter can be one of the following values:
2191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetTimeFormat(RTC_TypeDef *RTCx, uint32_t TimeFormat)
2196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM, TimeFormat);
2198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM B time format (AM or PM notation)
2202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_GetTimeFormat
2203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTimeFormat(RTC_TypeDef *RTCx)
2209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBR, RTC_ALRMBR_PM));
2211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM B Hours in BCD format
2215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Hours from binary to BCD fo
2216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_SetHour\n
2217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_SetHour
2218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetHour(RTC_TypeDef *RTCx, uint32_t Hours)
2223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU),
2225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Hours & 0xF0U) << (RTC_ALRMBR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALRMBR_HU_Pos
2226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM B Hours in BCD format
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 99


2230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_GetHour\n
2232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_GetHour
2233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetHour(RTC_TypeDef *RTCx)
2237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_HT | RTC_ALRMBR_HU))) >> RTC_ALRMBR_HU_Pos)
2239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM B Minutes in BCD format
2243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Minutes from binary to BCD 
2244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       MNT           LL_RTC_ALMB_SetMinute\n
2245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_SetMinute
2246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Minutes between Min_Data=0x00 and Max_Data=0x59
2248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetMinute(RTC_TypeDef *RTCx, uint32_t Minutes)
2251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU),
2253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Minutes & 0xF0U) << (RTC_ALRMBR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMBR_M
2254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM B Minutes in BCD format
2258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       MNT           LL_RTC_ALMB_GetMinute\n
2260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_GetMinute
2261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetMinute(RTC_TypeDef *RTCx)
2265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU))) >> RTC_ALRMBR_MNU_P
2267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set ALARM B Seconds in BCD format
2271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BIN2BCD is available to convert Seconds from binary to BCD 
2272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       ST            LL_RTC_ALMB_SetSecond\n
2273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_SetSecond
2274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSecond(RTC_TypeDef *RTCx, uint32_t Seconds)
2279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU),
2281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****              (((Seconds & 0xF0U) << (RTC_ALRMBR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMBR_SU
2282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get ALARM B Seconds in BCD format
2286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 100


2287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       ST            LL_RTC_ALMB_GetSecond\n
2288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_GetSecond
2289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSecond(RTC_TypeDef *RTCx)
2293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t temp = 0U;
2295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   temp = READ_BIT(RTCx->ALRMBR, (RTC_ALRMBR_ST | RTC_ALRMBR_SU));
2297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((((temp & RTC_ALRMBR_ST) >> RTC_ALRMBR_ST_Pos) << 4U) | ((temp & RTC_ALRMBR_SU)
2298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Alarm B Time (hour, minute and second) in BCD format
2302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       PM            LL_RTC_ALMB_ConfigTime\n
2303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       HT            LL_RTC_ALMB_ConfigTime\n
2304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_ConfigTime\n
2305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MNT           LL_RTC_ALMB_ConfigTime\n
2306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_ConfigTime\n
2307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       ST            LL_RTC_ALMB_ConfigTime\n
2308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_ConfigTime
2309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Format12_24 This parameter can be one of the following values:
2311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_AM
2312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_ALMB_TIME_FORMAT_PM
2313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Hours Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Da
2314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Minutes Value between Min_Data=0x00 and Max_Data=0x59
2315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Seconds Value between Min_Data=0x00 and Max_Data=0x59
2316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_ConfigTime(RTC_TypeDef *RTCx, uint32_t Format12_24, uint32_t Hours
2319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t temp = 0U;
2321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   temp = Format12_24 | (((Hours & 0xF0U) << (RTC_ALRMBR_HT_Pos - 4U)) | ((Hours & 0x0FU) << RTC_ALR
2323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Minutes & 0xF0U) << (RTC_ALRMBR_MNT_Pos - 4U)) | ((Minutes & 0x0FU) << RTC_ALRMBR_MNU_P
2324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****          (((Seconds & 0xF0U) << (RTC_ALRMBR_ST_Pos - 4U)) | ((Seconds & 0x0FU) << RTC_ALRMBR_SU_Pos
2325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBR, RTC_ALRMBR_PM| RTC_ALRMBR_HT | RTC_ALRMBR_HU | RTC_ALRMBR_MNT | RTC_ALRM
2327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm B Time (hour, minute and second) in BCD format
2331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * are available to get independently each parameter.
2333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBR       HT            LL_RTC_ALMB_GetTime\n
2334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       HU            LL_RTC_ALMB_GetTime\n
2335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MNT           LL_RTC_ALMB_GetTime\n
2336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       MNU           LL_RTC_ALMB_GetTime\n
2337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       ST            LL_RTC_ALMB_GetTime\n
2338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         ALRMBR       SU            LL_RTC_ALMB_GetTime
2339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetTime(RTC_TypeDef *RTCx)
2343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 101


2344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)((LL_RTC_ALMB_GetHour(RTCx) << RTC_OFFSET_HOUR) | (LL_RTC_ALMB_GetMinute(RTCx) <
2345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Alarm B Mask the most-significant bits starting at this bit
2349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note This register can be written only when ALRBE is reset in RTC_CR register,
2350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *       or in initialization mode.
2351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     MASKSS        LL_RTC_ALMB_SetSubSecondMask
2352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Mask Value between Min_Data=0x00 and Max_Data=0xF
2354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecondMask(RTC_TypeDef *RTCx, uint32_t Mask)
2357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS, Mask << RTC_ALRMBSSR_MASKSS_Pos);
2359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm B Mask the most-significant bits starting at this bit
2363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     MASKSS        LL_RTC_ALMB_GetSubSecondMask
2364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xF
2366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecondMask(RTC_TypeDef *RTCx)
2368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_MASKSS)  >> RTC_ALRMBSSR_MASKSS_Pos);
2370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Alarm B Sub seconds value
2374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     SS            LL_RTC_ALMB_SetSubSecond
2375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Subsecond Value between Min_Data=0x00 and Max_Data=0x7FFF
2377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ALMB_SetSubSecond(RTC_TypeDef *RTCx, uint32_t Subsecond)
2380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS, Subsecond);
2382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm B Sub seconds value
2386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ALRMBSSR     SS            LL_RTC_ALMB_GetSubSecond
2387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7FFF
2389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_ALMB_GetSubSecond(RTC_TypeDef *RTCx)
2391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->ALRMBSSR, RTC_ALRMBSSR_SS));
2393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
2397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Timestamp Timestamp
2400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 102


2401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable Timestamp
2405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Enable
2407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Enable(RTC_TypeDef *RTCx)
2411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_TSE);
2413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable Timestamp
2417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           TSE           LL_RTC_TS_Disable
2419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_Disable(RTC_TypeDef *RTCx)
2423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_TSE);
2425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Time-stamp event active edge
2429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note TSE must be reset when TSEDGE is changed to avoid unwanted TSF setting
2431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_SetActiveEdge
2432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Edge This parameter can be one of the following values:
2434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_SetActiveEdge(RTC_TypeDef *RTCx, uint32_t Edge)
2439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_TSEDGE, Edge);
2441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Time-stamp event active edge
2445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           TSEDGE        LL_RTC_TS_GetActiveEdge
2447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_RISING
2450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TIMESTAMP_EDGE_FALLING
2451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetActiveEdge(RTC_TypeDef *RTCx)
2453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_TSEDGE));
2455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 103


2458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp AM/PM notation (AM or 24-hour format)
2459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSTR         PM            LL_RTC_TS_GetTimeFormat
2460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_AM
2463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TS_TIME_FORMAT_PM
2464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTimeFormat(RTC_TypeDef *RTCx)
2466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_PM));
2468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp Hours in BCD format
2472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Hours from BCD to Binary fo
2473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetHour\n
2474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetHour
2475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x12 or between Min_Data=0x00 and Max_Data=0x2
2477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetHour(RTC_TypeDef *RTCx)
2479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_HT | RTC_TSTR_HU) >> RTC_TSTR_HU_Pos);
2481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp Minutes in BCD format
2485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Minutes from BCD to Binary 
2486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSTR         MNT           LL_RTC_TS_GetMinute\n
2487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetMinute
2488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMinute(RTC_TypeDef *RTCx)
2492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_MNT | RTC_TSTR_MNU) >> RTC_TSTR_MNU_Pos);
2494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp Seconds in BCD format
2498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Seconds from BCD to Binary 
2499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSTR         ST            LL_RTC_TS_GetSecond\n
2500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetSecond
2501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x59
2503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSecond(RTC_TypeDef *RTCx)
2505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR, RTC_TSTR_ST | RTC_TSTR_SU));
2507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp time (hour, minute and second) in BCD format
2511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_HOUR, __LL_RTC_GET_MINUTE and __LL_RTC_GET_SECOND
2512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * are available to get independently each parameter.
2513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSTR         HT            LL_RTC_TS_GetTime\n
2514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         HU            LL_RTC_TS_GetTime\n
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 104


2515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         MNT           LL_RTC_TS_GetTime\n
2516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         MNU           LL_RTC_TS_GetTime\n
2517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         ST            LL_RTC_TS_GetTime\n
2518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSTR         SU            LL_RTC_TS_GetTime
2519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Combination of hours, minutes and seconds.
2521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetTime(RTC_TypeDef *RTCx)
2523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSTR,
2525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****                              RTC_TSTR_HT | RTC_TSTR_HU | RTC_TSTR_MNT | RTC_TSTR_MNU | RTC_TSTR_ST 
2526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp Week day
2530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetWeekDay
2531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_MONDAY
2534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_TUESDAY
2535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_WEDNESDAY
2536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_THURSDAY
2537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_FRIDAY
2538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SATURDAY
2539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WEEKDAY_SUNDAY
2540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetWeekDay(RTC_TypeDef *RTCx)
2542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU) >> RTC_TSDR_WDU_Pos);
2544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp Month in BCD format
2548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Month from BCD to Binary fo
2549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSDR         MT            LL_RTC_TS_GetMonth\n
2550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetMonth
2551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JANUARY
2554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_FEBRUARY
2555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MARCH
2556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_APRIL
2557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_MAY
2558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JUNE
2559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_JULY
2560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_AUGUST
2561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_SEPTEMBER
2562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_OCTOBER
2563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_NOVEMBER
2564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_MONTH_DECEMBER
2565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetMonth(RTC_TypeDef *RTCx)
2567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_MT | RTC_TSDR_MU) >> RTC_TSDR_MU_Pos);
2569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 105


2572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp Day in BCD format
2573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macro __LL_RTC_CONVERT_BCD2BIN is available to convert Day from BCD to Binary form
2574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSDR         DT            LL_RTC_TS_GetDay\n
2575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDay
2576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x01 and Max_Data=0x31
2578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDay(RTC_TypeDef *RTCx)
2580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_DT | RTC_TSDR_DU));
2582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Timestamp date (WeekDay, Day and Month) in BCD format
2586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note helper macros __LL_RTC_GET_WEEKDAY, __LL_RTC_GET_MONTH,
2587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * and __LL_RTC_GET_DAY are available to get independently each parameter.
2588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSDR         WDU           LL_RTC_TS_GetDate\n
2589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSDR         MT            LL_RTC_TS_GetDate\n
2590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSDR         MU            LL_RTC_TS_GetDate\n
2591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSDR         DT            LL_RTC_TS_GetDate\n
2592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TSDR         DU            LL_RTC_TS_GetDate
2593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Combination of Weekday, Day and Month
2595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetDate(RTC_TypeDef *RTCx)
2597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSDR, RTC_TSDR_WDU | RTC_TSDR_MT | RTC_TSDR_MU | RTC_TSDR_DT | R
2599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get time-stamp sub second value
2603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TSSSR        SS            LL_RTC_TS_GetSubSecond
2604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
2606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetSubSecond(RTC_TypeDef *RTCx)
2608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TSSSR, RTC_TSSSR_SS));
2610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPTS)
2613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Activate timestamp on tamper detection event
2615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPTS        LL_RTC_TS_EnableOnTamper
2616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_EnableOnTamper(RTC_TypeDef *RTCx)
2620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPTS);
2622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable timestamp on tamper detection event
2626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPTS        LL_RTC_TS_DisableOnTamper
2627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 106


2629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_DisableOnTamper(RTC_TypeDef *RTCx)
2631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPTS);
2633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPTS */
2635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set timestamp Pin
2638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TSINSEL      LL_RTC_TS_SetPin
2639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  TSPin specifies the RTC TimeStamp Pin.
2641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *          This parameter can be one of the following values:
2642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TimeStampPin_Default: RTC_AF1 is used as RTC TimeStamp.
2643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TimeStampPin_Pos1: RTC_AF2 is selected as RTC TimeStamp. (*)
2644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            
2645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            (*) value not defined in all devices.
2646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TS_SetPin(RTC_TypeDef *RTCx, uint32_t TSPin)
2649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TSINSEL , TSPin); 
2651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get timestamp Pin
2655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TSINSEL      LL_RTC_TS_GetPin
2656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TimeStampPin_Default: RTC_AF1 is used as RTC TimeStamp Pin.
2659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TimeStampPin_Pos1: RTC_AF2 is selected as RTC TimeStamp Pin. (*)
2660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            
2661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            (*) value not defined in all devices.
2662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TS_GetPin(RTC_TypeDef *RTCx)
2666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****    return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TSINSEL));
2668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
2672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Tamper Tamper
2675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
2676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx input detection
2680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1E        LL_RTC_TAMPER_Enable\n
2681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR       TAMP2E        LL_RTC_TAMPER_Enable\n
2682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 
2685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2 (*)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 107


2686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         
2687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Enable(RTC_TypeDef *RTCx, uint32_t Tamper)
2691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, Tamper);
2693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear RTC_TAMPx input detection
2697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1E        LL_RTC_TAMPER_Disable\n
2698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR       TAMP2E        LL_RTC_TAMPER_Disable\n
2699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_1 
2702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_2 (*)
2703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         
2704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_Disable(RTC_TypeDef *RTCx, uint32_t Tamper)
2708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, Tamper);
2710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPPUDIS)
2713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable RTC_TAMPx pull-up disable (Disable precharge of RTC_TAMPx pins)
2715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPUDIS     LL_RTC_TAMPER_DisablePullUp
2716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisablePullUp(RTC_TypeDef *RTCx)
2720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPPUDIS);
2722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable RTC_TAMPx pull-up disable ( Precharge RTC_TAMPx pins before sampling)
2726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPUDIS     LL_RTC_TAMPER_EnablePullUp
2727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnablePullUp(RTC_TypeDef *RTCx)
2731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPPUDIS);
2733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPPUDIS */
2735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPPRCH)
2737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx precharge duration
2739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPRCH      LL_RTC_TAMPER_SetPrecharge
2740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Duration This parameter can be one of the following values:
2742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 108


2743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
2744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetPrecharge(RTC_TypeDef *RTCx, uint32_t Duration)
2749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TAMPPRCH, Duration);
2751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx precharge duration
2755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPPRCH      LL_RTC_TAMPER_GetPrecharge
2756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_1RTCCLK
2759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_2RTCCLK
2760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_4RTCCLK
2761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_DURATION_8RTCCLK
2762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetPrecharge(RTC_TypeDef *RTCx)
2764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPPRCH));
2766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPPRCH */
2768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFLT)
2770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set RTC_TAMPx filter count
2772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFLT       LL_RTC_TAMPER_SetFilterCount
2773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  FilterCount This parameter can be one of the following values:
2775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
2779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetFilterCount(RTC_TypeDef *RTCx, uint32_t FilterCount)
2782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TAMPFLT, FilterCount);
2784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get RTC_TAMPx filter count
2788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFLT       LL_RTC_TAMPER_GetFilterCount
2789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_DISABLE
2792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_2SAMPLE
2793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_4SAMPLE
2794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_FILTER_8SAMPLE
2795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetFilterCount(RTC_TypeDef *RTCx)
2797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPFLT));
2799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 109


2800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFLT */
2801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAFCR_TAMPFREQ)
2803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Tamper sampling frequency
2805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFREQ      LL_RTC_TAMPER_SetSamplingFreq
2806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  SamplingFreq This parameter can be one of the following values:
2808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetSamplingFreq(RTC_TypeDef *RTCx, uint32_t SamplingFreq)
2819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TAMPFREQ, SamplingFreq);
2821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Tamper sampling frequency
2825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMPFREQ      LL_RTC_TAMPER_GetSamplingFreq
2826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_32768
2829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_16384
2830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_8192
2831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_4096
2832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_2048
2833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_1024
2834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_512
2835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_SAMPLFREQDIV_256
2836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetSamplingFreq(RTC_TypeDef *RTCx)
2838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TAMPFREQ));
2840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAFCR_TAMPFREQ */
2842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable Active level for Tamper input
2845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR       TAMP2TRG      LL_RTC_TAMPER_EnableActiveLevel\n
2847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 
2850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2 (*)
2851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         
2852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_EnableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
2856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 110


2857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->TAFCR, Tamper);
2858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable Active level for Tamper input
2862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         TAFCR       TAMP2TRG      LL_RTC_TAMPER_DisableActiveLevel\n
2864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Tamper This parameter can be a combination of the following values:
2866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP1 
2867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_TAMPER_ACTIVELEVEL_TAMP2 (*)
2868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         
2869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         (*) value not defined in all devices.
2870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_DisableActiveLevel(RTC_TypeDef *RTCx, uint32_t Tamper)
2873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->TAFCR, Tamper);
2875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Tamper Pin
2879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1INSEL      LL_RTC_TAMPER_SetPin
2880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  TamperPin specifies the RTC Tamper Pin.
2882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *          This parameter can be one of the following values:
2883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TamperPin_Default: RTC_AF1 is used as RTC Tamper.
2884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TamperPin_Pos1: RTC_AF2 is selected as RTC Tamper. (*)
2885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            
2886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            (*) value not defined in all devices.
2887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_TAMPER_SetPin(RTC_TypeDef *RTCx, uint32_t TamperPin)
2890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->TAFCR, RTC_TAFCR_TAMP1INSEL , TamperPin); 
2892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Tamper Pin
2896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll TAFCR       TAMP1INSEL      LL_RTC_TAMPER_GetPin
2897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TamperPin_Default: RTC_AF1 is used as RTC Tamper Pin.
2900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            @arg LL_RTC_TamperPin_Pos1: RTC_AF2 is selected as RTC Tamper Pin. (*)
2901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            
2902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *            (*) value not defined in all devices.
2903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_TAMPER_GetPin(RTC_TypeDef *RTCx)
2907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****    return (uint32_t)(READ_BIT(RTCx->TAFCR, RTC_TAFCR_TAMP1INSEL));
2909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
2913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 111


2914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Wakeup Wakeup
2916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
2917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable Wakeup timer
2921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Enable
2923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Enable(RTC_TypeDef *RTCx)
2927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_WUTE);
2929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable Wakeup timer
2933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_Disable
2935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_Disable(RTC_TypeDef *RTCx)
2939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_WUTE);
2941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Check if Wakeup timer is enabled or not
2945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           WUTE          LL_RTC_WAKEUP_IsEnabled
2946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
2948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_IsEnabled(RTC_TypeDef *RTCx)
2950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CR, RTC_CR_WUTE) == (RTC_CR_WUTE));
2952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Select Wakeup clock
2956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
2957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Bit can be written only when RTC_CR WUTE bit = 0 and RTC_ISR WUTWF bit = 1
2958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           WUCKSEL       LL_RTC_WAKEUP_SetClock
2959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  WakeupClock This parameter can be one of the following values:
2961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
2962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
2963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
2964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
2965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
2966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
2967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetClock(RTC_TypeDef *RTCx, uint32_t WakeupClock)
2970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 112


2971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_WUCKSEL, WakeupClock);
2972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Wakeup clock
2976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           WUCKSEL       LL_RTC_WAKEUP_GetClock
2977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
2979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_16
2980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_8
2981:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_4
2982:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_DIV_2
2983:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE
2984:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_WAKEUPCLOCK_CKSPRE_WUT
2985:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2986:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetClock(RTC_TypeDef *RTCx)
2987:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
2988:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_WUCKSEL));
2989:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
2990:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
2991:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
2992:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Wakeup auto-reload value
2993:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Bit can be written only when WUTWF is set to 1 in RTC_ISR
2994:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll WUTR         WUT           LL_RTC_WAKEUP_SetAutoReload
2995:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
2996:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Value Value between Min_Data=0x00 and Max_Data=0xFFFF
2997:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
2998:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
2999:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_WAKEUP_SetAutoReload(RTC_TypeDef *RTCx, uint32_t Value)
3000:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3001:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->WUTR, RTC_WUTR_WUT, Value);
3002:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3003:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3004:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3005:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Wakeup auto-reload value
3006:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll WUTR         WUT           LL_RTC_WAKEUP_GetAutoReload
3007:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3008:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
3009:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3010:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_WAKEUP_GetAutoReload(RTC_TypeDef *RTCx)
3011:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3012:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->WUTR, RTC_WUTR_WUT));
3013:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3014:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3015:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3016:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
3017:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3018:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3019:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Backup_Registers Backup_Registers
3020:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
3021:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3022:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3023:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3024:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Writes a data in a specified RTC Backup data register.
3025:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_SetRegister
3026:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3027:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 113


3028:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
3029:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
3030:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
3031:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
3032:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
3033:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR5
3034:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR6
3035:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR7
3036:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR8
3037:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR9
3038:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR10
3039:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR11
3040:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR12
3041:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR13
3042:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR14
3043:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR15
3044:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR16
3045:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR17
3046:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR18
3047:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR19
3048:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Data Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
3049:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3050:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3051:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_BAK_SetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister, uint32_t Da
3052:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3053:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t tmp = 0U;
3054:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3055:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
3056:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
3057:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3058:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   /* Write the specified register */
3059:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *(__IO uint32_t *)tmp = (uint32_t)Data;
3060:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3061:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3062:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3063:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Reads data from the specified RTC Backup data Register.
3064:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll BKPxR        BKP           LL_RTC_BAK_GetRegister
3065:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3066:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  BackupRegister This parameter can be one of the following values:
3067:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR0
3068:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR1
3069:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR2
3070:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR3
3071:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR4
3072:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR5
3073:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR6
3074:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR7
3075:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR8
3076:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR9
3077:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR10
3078:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR11
3079:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR12
3080:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR13
3081:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR14
3082:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR15
3083:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR16
3084:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR17
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 114


3085:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR18
3086:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_BKP_DR19
3087:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFFFFFF
3088:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3089:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_BAK_GetRegister(RTC_TypeDef *RTCx, uint32_t BackupRegister)
3090:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3091:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   register uint32_t tmp = 0U;
3092:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3093:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   tmp = (uint32_t)(&(RTCx->BKP0R));
3094:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   tmp += (BackupRegister * 4U);
3095:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3096:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   /* Read the specified register */
3097:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (*(__IO uint32_t *)tmp);
3098:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3099:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
3102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_Calibration Calibration
3105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
3106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Calibration output frequency (1 Hz or 512 Hz)
3110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Bits are write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           COE           LL_RTC_CAL_SetOutputFreq\n
3112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         CR           COSEL         LL_RTC_CAL_SetOutputFreq
3113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Frequency This parameter can be one of the following values:
3115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
3116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
3117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
3118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetOutputFreq(RTC_TypeDef *RTCx, uint32_t Frequency)
3121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL, Frequency);
3123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Calibration output frequency (1 Hz or 512 Hz)
3127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           COE           LL_RTC_CAL_GetOutputFreq\n
3128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         CR           COSEL         LL_RTC_CAL_GetOutputFreq
3129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_NONE
3132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_1HZ
3133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_OUTPUT_512HZ
3134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetOutputFreq(RTC_TypeDef *RTCx)
3136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CR, RTC_CR_COE | RTC_CR_COSEL));
3138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Enable Coarse digital calibration
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 115


3142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
3144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           DCE           LL_RTC_CAL_EnableCoarseDigital
3145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_EnableCoarseDigital(RTC_TypeDef *RTCx)
3149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   SET_BIT(RTCx->CR, RTC_CR_DCE);
3151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Disable Coarse digital calibration
3155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
3157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CR           DCE           LL_RTC_CAL_DisableCoarseDigital
3158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_DisableCoarseDigital(RTC_TypeDef  *RTCx)
3162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   CLEAR_BIT(RTCx->CR, RTC_CR_DCE);
3164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set the coarse digital calibration
3168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   It can be written in initialization mode only (@ref LL_RTC_EnableInitMode function)
3170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALIBR       DCS           LL_RTC_CAL_ConfigCoarseDigital\n
3171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         CALIBR       DC            LL_RTC_CAL_ConfigCoarseDigital
3172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Sign This parameter can be one of the following values:
3174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_SIGN_POSITIVE
3175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_SIGN_NEGATIVE
3176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Value value of coarse calibration expressed in ppm (coded on 5 bits)
3177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   This Calibration value should be between 0 and 63 when using negative sign with a 2-ppm
3178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   This Calibration value should be between 0 and 126 when using positive sign with a 4-pp
3179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_ConfigCoarseDigital(RTC_TypeDef* RTCx, uint32_t Sign, uint32_t Valu
3182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALIBR, RTC_CALIBR_DCS | RTC_CALIBR_DC, Sign | Value);
3184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get the coarse digital calibration value
3188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALIBR       DC            LL_RTC_CAL_GetCoarseDigitalValue
3189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval value of coarse calibration expressed in ppm (coded on 5 bits)
3191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetCoarseDigitalValue(RTC_TypeDef *RTCx)
3193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALIBR, RTC_CALIBR_DC));
3195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get the coarse digital calibration sign
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 116


3199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALIBR       DCS           LL_RTC_CAL_GetCoarseDigitalSign
3200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_SIGN_POSITIVE
3203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_SIGN_NEGATIVE
3204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetCoarseDigitalSign(RTC_TypeDef* RTCx)
3206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALIBR, RTC_CALIBR_DCS));
3208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Insert or not One RTCCLK pulse every 2exp11 pulses (frequency increased by 488.5 ppm)
3212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note Bit can be written only when RECALPF is set to 0 in RTC_ISR
3214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALR         CALP          LL_RTC_CAL_SetPulse
3215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Pulse This parameter can be one of the following values:
3217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_NONE
3218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_INSERTPULSE_SET
3219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPulse(RTC_TypeDef *RTCx, uint32_t Pulse)
3222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALP, Pulse);
3224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Check if one RTCCLK has been inserted or not every 2exp11 pulses (frequency increased b
3228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALR         CALP          LL_RTC_CAL_IsPulseInserted
3229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_IsPulseInserted(RTC_TypeDef *RTCx)
3233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->CALR, RTC_CALR_CALP) == (RTC_CALR_CALP));
3235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set the calibration cycle period
3239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0 in RTC_ISR
3241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALR         CALW8         LL_RTC_CAL_SetPeriod\n
3242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         CALR         CALW16        LL_RTC_CAL_SetPeriod
3243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  Period This parameter can be one of the following values:
3245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
3246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
3247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
3248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetPeriod(RTC_TypeDef *RTCx, uint32_t Period)
3251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16, Period);
3253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 117


3256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get the calibration cycle period
3257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALR         CALW8         LL_RTC_CAL_GetPeriod\n
3258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         CALR         CALW16        LL_RTC_CAL_GetPeriod
3259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Returned value can be one of the following values:
3261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_32SEC
3262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_16SEC
3263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   *         @arg @ref LL_RTC_CALIB_PERIOD_8SEC
3264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetPeriod(RTC_TypeDef *RTCx)
3266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALW8 | RTC_CALR_CALW16));
3268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Set Calibration minus
3272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit is write-protected. @ref LL_RTC_DisableWriteProtection function should be called be
3273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @note   Bit can be written only when RECALPF is set to 0 in RTC_ISR
3274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALR         CALM          LL_RTC_CAL_SetMinus
3275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  CalibMinus Value between Min_Data=0x00 and Max_Data=0x1FF
3277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_CAL_SetMinus(RTC_TypeDef *RTCx, uint32_t CalibMinus)
3280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   MODIFY_REG(RTCx->CALR, RTC_CALR_CALM, CalibMinus);
3282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Calibration minus
3286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll CALR         CALM          LL_RTC_CAL_GetMinus
3287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval Value between Min_Data=0x00 and Max_Data= 0x1FF
3289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_CAL_GetMinus(RTC_TypeDef *RTCx)
3291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (uint32_t)(READ_BIT(RTCx->CALR, RTC_CALR_CALM));
3293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @}
3297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /** @defgroup RTC_LL_EF_FLAG_Management FLAG_Management
3300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @{
3301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Recalibration pending Flag
3305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          RECALPF       LL_RTC_IsActiveFlag_RECALP
3306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_RECALP(RTC_TypeDef *RTCx)
3310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_RECALPF) == (RTC_ISR_RECALPF));
3312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 118


3313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
3316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get RTC_TAMP2 detection flag
3318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_IsActiveFlag_TAMP2
3319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP2(RTC_TypeDef *RTCx)
3323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP2F) == (RTC_ISR_TAMP2F));
3325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
3327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get RTC_TAMP1 detection flag
3330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_IsActiveFlag_TAMP1
3331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TAMP1(RTC_TypeDef *RTCx)
3335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TAMP1F) == (RTC_ISR_TAMP1F));
3337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Time-stamp overflow flag
3341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_IsActiveFlag_TSOV
3342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TSOV(RTC_TypeDef *RTCx)
3346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSOVF) == (RTC_ISR_TSOVF));
3348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Time-stamp flag
3352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_IsActiveFlag_TS
3353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_TS(RTC_TypeDef *RTCx)
3357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_TSF) == (RTC_ISR_TSF));
3359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Wakeup timer flag
3363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_IsActiveFlag_WUT
3364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_WUT(RTC_TypeDef *RTCx)
3368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_WUTF) == (RTC_ISR_WUTF));
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 119


3370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm B flag
3374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          ALRBF         LL_RTC_IsActiveFlag_ALRB
3375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRB(RTC_TypeDef *RTCx)
3379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ALRBF) == (RTC_ISR_ALRBF));
3381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Get Alarm A flag
3385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_IsActiveFlag_ALRA
3386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval State of bit (1 or 0).
3388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE uint32_t LL_RTC_IsActiveFlag_ALRA(RTC_TypeDef *RTCx)
3390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   return (READ_BIT(RTCx->ISR, RTC_ISR_ALRAF) == (RTC_ISR_ALRAF));
 355              		.loc 4 3391 11 view .LVU36
 356 0008 134B     		ldr	r3, .L31+4
 357              	.LBE28:
 358              	.LBE27:
 359              	.LBB30:
 360              	.LBB25:
 361              		.loc 2 913 3 view .LVU37
 362 000a 5161     		str	r1, [r2, #20]
 363              	.LVL5:
 364              		.loc 2 913 3 view .LVU38
 365              	.LBE25:
 366              	.LBE30:
 130:Core/Src/stm32f4xx_it.c **** 
 131:Core/Src/stm32f4xx_it.c ****   if (LL_RTC_IsActiveFlag_ALRA(RTC)) {
 367              		.loc 1 131 3 is_stmt 1 view .LVU39
 368              	.LBB31:
 369              	.LBI27:
3389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 370              		.loc 4 3389 26 view .LVU40
 371              	.LBB29:
 372              		.loc 4 3391 3 view .LVU41
 373              		.loc 4 3391 11 is_stmt 0 view .LVU42
 374 000c DA68     		ldr	r2, [r3, #12]
 375              	.LVL6:
 376              		.loc 4 3391 11 view .LVU43
 377              	.LBE29:
 378              	.LBE31:
 379              		.loc 1 131 6 view .LVU44
 380 000e D105     		lsls	r1, r2, #23
 381 0010 04D4     		bmi	.L29
 132:Core/Src/stm32f4xx_it.c ****     LL_RTC_ClearFlag_ALRA(RTC);
 133:Core/Src/stm32f4xx_it.c ****     FLAG_SET(_EREG_, _RTCALAF_);
 134:Core/Src/stm32f4xx_it.c ****   }
 135:Core/Src/stm32f4xx_it.c **** 
 136:Core/Src/stm32f4xx_it.c ****   if (LL_RTC_IsActiveFlag_ALRB(RTC)) {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 120


 382              		.loc 1 136 3 is_stmt 1 view .LVU45
 383              	.LVL7:
 384              	.LBB32:
 385              	.LBI32:
3378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 386              		.loc 4 3378 26 view .LVU46
 387              	.LBB33:
3380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 388              		.loc 4 3380 3 view .LVU47
3380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 389              		.loc 4 3380 11 is_stmt 0 view .LVU48
 390 0012 114B     		ldr	r3, .L31+4
 391 0014 DA68     		ldr	r2, [r3, #12]
 392              	.LVL8:
3380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 393              		.loc 4 3380 11 view .LVU49
 394              	.LBE33:
 395              	.LBE32:
 396              		.loc 1 136 6 view .LVU50
 397 0016 9205     		lsls	r2, r2, #22
 398 0018 0FD4     		bmi	.L30
 399              	.L22:
 137:Core/Src/stm32f4xx_it.c ****     LL_RTC_ClearFlag_ALRB(RTC);
 138:Core/Src/stm32f4xx_it.c ****     FLAG_SET(_EREG_, _RTCALBF_);
 139:Core/Src/stm32f4xx_it.c ****   }
 140:Core/Src/stm32f4xx_it.c **** }
 400              		.loc 1 140 1 view .LVU51
 401 001a 08BD     		pop	{r3, pc}
 402              	.L29:
 132:Core/Src/stm32f4xx_it.c ****     FLAG_SET(_EREG_, _RTCALAF_);
 403              		.loc 1 132 5 is_stmt 1 view .LVU52
 404              	.LVL9:
 405              	.LBB35:
 406              	.LBI35:
3392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #if defined(RTC_TAMPER2_SUPPORT)
3396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP2 detection flag
3398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP2F        LL_RTC_ClearFlag_TAMP2
3399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP2(RTC_TypeDef *RTCx)
3403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP2F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
3405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** #endif /* RTC_TAMPER2_SUPPORT */
3407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear RTC_TAMP1 detection flag
3410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TAMP1F        LL_RTC_ClearFlag_TAMP1
3411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TAMP1(RTC_TypeDef *RTCx)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 121


3415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TAMP1F | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INI
3417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear Time-stamp overflow flag
3421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TSOVF         LL_RTC_ClearFlag_TSOV
3422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TSOV(RTC_TypeDef *RTCx)
3426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSOVF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
3428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear Time-stamp flag
3432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          TSF           LL_RTC_ClearFlag_TS
3433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_TS(RTC_TypeDef *RTCx)
3437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_TSF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT))
3439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear Wakeup timer flag
3443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          WUTF          LL_RTC_ClearFlag_WUT
3444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_WUT(RTC_TypeDef *RTCx)
3448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_WUTF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT)
3450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear Alarm B flag
3454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          ALRBF         LL_RTC_ClearFlag_ALRB
3455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRB(RTC_TypeDef *RTCx)
3459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ALRBF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
3461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
3462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** 
3463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** /**
3464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @brief  Clear Alarm A flag
3465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @rmtoll ISR          ALRAF         LL_RTC_ClearFlag_ALRA
3466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @param  RTCx RTC Instance
3467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   * @retval None
3468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   */
3469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** __STATIC_INLINE void LL_RTC_ClearFlag_ALRA(RTC_TypeDef *RTCx)
 407              		.loc 4 3469 22 view .LVU53
 408              	.LBB36:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 122


3470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
3471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h ****   WRITE_REG(RTCx->ISR, (~((RTC_ISR_ALRAF | RTC_ISR_INIT) & 0x0000FFFFU) | (RTCx->ISR & RTC_ISR_INIT
 409              		.loc 4 3471 3 view .LVU54
 410 001c DA68     		ldr	r2, [r3, #12]
 411              	.LBE36:
 412              	.LBE35:
 133:Core/Src/stm32f4xx_it.c ****   }
 413              		.loc 1 133 5 is_stmt 0 view .LVU55
 414 001e 0F48     		ldr	r0, .L31+8
 415              	.LBB39:
 416              	.LBB37:
 417              		.loc 4 3471 3 view .LVU56
 418 0020 D2B2     		uxtb	r2, r2
 419 0022 62F4C072 		orn	r2, r2, #384
 420              	.LBE37:
 421              	.LBE39:
 133:Core/Src/stm32f4xx_it.c ****   }
 422              		.loc 1 133 5 view .LVU57
 423 0026 4001     		lsls	r0, r0, #5
 424              	.LBB40:
 425              	.LBB38:
 426              		.loc 4 3471 3 view .LVU58
 427 0028 DA60     		str	r2, [r3, #12]
 428              	.LVL10:
 429              		.loc 4 3471 3 view .LVU59
 430              	.LBE38:
 431              	.LBE40:
 133:Core/Src/stm32f4xx_it.c ****   }
 432              		.loc 1 133 5 is_stmt 1 view .LVU60
 433 002a 0430     		adds	r0, r0, #4
 434 002c 0121     		movs	r1, #1
 435 002e FFF7FEFF 		bl	Set_BitBandVal
 436              	.LVL11:
 136:Core/Src/stm32f4xx_it.c ****     LL_RTC_ClearFlag_ALRB(RTC);
 437              		.loc 1 136 3 view .LVU61
 438              	.LBB41:
3378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 439              		.loc 4 3378 26 view .LVU62
 440              	.LBB34:
3380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 441              		.loc 4 3380 3 view .LVU63
3380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 442              		.loc 4 3380 11 is_stmt 0 view .LVU64
 443 0032 094B     		ldr	r3, .L31+4
 444 0034 DA68     		ldr	r2, [r3, #12]
 445              	.LVL12:
3380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 446              		.loc 4 3380 11 view .LVU65
 447              	.LBE34:
 448              	.LBE41:
 136:Core/Src/stm32f4xx_it.c ****     LL_RTC_ClearFlag_ALRB(RTC);
 449              		.loc 1 136 6 view .LVU66
 450 0036 9205     		lsls	r2, r2, #22
 451 0038 EFD5     		bpl	.L22
 452              	.L30:
 137:Core/Src/stm32f4xx_it.c ****     FLAG_SET(_EREG_, _RTCALBF_);
 453              		.loc 1 137 5 is_stmt 1 view .LVU67
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 123


 454              	.LVL13:
 455              	.LBB42:
 456              	.LBI42:
3458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** {
 457              		.loc 4 3458 22 view .LVU68
 458              	.LBB43:
3460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 459              		.loc 4 3460 3 view .LVU69
 460 003a DA68     		ldr	r2, [r3, #12]
 461              	.LBE43:
 462              	.LBE42:
 138:Core/Src/stm32f4xx_it.c ****   }
 463              		.loc 1 138 5 is_stmt 0 view .LVU70
 464 003c 0748     		ldr	r0, .L31+8
 465              	.LBB46:
 466              	.LBB44:
3460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 467              		.loc 4 3460 3 view .LVU71
 468 003e D2B2     		uxtb	r2, r2
 469 0040 62F42072 		orn	r2, r2, #640
 470              	.LBE44:
 471              	.LBE46:
 138:Core/Src/stm32f4xx_it.c ****   }
 472              		.loc 1 138 5 view .LVU72
 473 0044 4001     		lsls	r0, r0, #5
 474              	.LBB47:
 475              	.LBB45:
3460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 476              		.loc 4 3460 3 view .LVU73
 477 0046 DA60     		str	r2, [r3, #12]
 478              	.LVL14:
3460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rtc.h **** }
 479              		.loc 4 3460 3 view .LVU74
 480              	.LBE45:
 481              	.LBE47:
 138:Core/Src/stm32f4xx_it.c ****   }
 482              		.loc 1 138 5 is_stmt 1 view .LVU75
 483 0048 0830     		adds	r0, r0, #8
 484              		.loc 1 140 1 is_stmt 0 view .LVU76
 485 004a BDE80840 		pop	{r3, lr}
 486              	.LCFI1:
 487              		.cfi_restore 14
 488              		.cfi_restore 3
 489              		.cfi_def_cfa_offset 0
 138:Core/Src/stm32f4xx_it.c ****   }
 490              		.loc 1 138 5 view .LVU77
 491 004e 0121     		movs	r1, #1
 492 0050 FFF7FEBF 		b	Set_BitBandVal
 493              	.LVL15:
 494              	.L32:
 495              		.align	2
 496              	.L31:
 497 0054 003C0140 		.word	1073822720
 498 0058 00280040 		.word	1073752064
 499 005c 00001001 		.word	_EREG_+17825792
 500              		.cfi_endproc
 501              	.LFE1350:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 124


 503              		.section	.text.TIM7_IRQHandler,"ax",%progbits
 504              		.align	1
 505              		.p2align 2,,3
 506              		.global	TIM7_IRQHandler
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu fpv4-sp-d16
 512              	TIM7_IRQHandler:
 513              	.LFB1351:
 141:Core/Src/stm32f4xx_it.c **** 
 142:Core/Src/stm32f4xx_it.c **** 
 143:Core/Src/stm32f4xx_it.c **** 
 144:Core/Src/stm32f4xx_it.c **** /**
 145:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM7 global interrupt.
 146:Core/Src/stm32f4xx_it.c ****   */
 147:Core/Src/stm32f4xx_it.c **** void TIM7_IRQHandler(void) {
 514              		.loc 1 147 28 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 148:Core/Src/stm32f4xx_it.c ****   LL_TIM_ClearFlag_UPDATE(TIM7);
 519              		.loc 1 148 3 view .LVU79
 520              	.LVL16:
 521              	.LBB48:
 522              	.LBI48:
 523              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h"
   1:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @file    stm32f4xx_ll_tim.h
   4:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @attention
   8:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
   9:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  10:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
  12:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
  17:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ******************************************************************************
  18:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
  19:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  20:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #ifndef __STM32F4xx_LL_TIM_H
  22:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define __STM32F4xx_LL_TIM_H
  23:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  24:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #ifdef __cplusplus
  25:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** extern "C" {
  26:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #endif
  27:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  28:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #include "stm32f4xx.h"
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 125


  30:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  31:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @addtogroup STM32F4xx_LL_Driver
  32:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
  33:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
  34:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  35:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #if defined (TIM1) || defined (TIM2) || defined (TIM3) || defined (TIM4) || defined (TIM5) || defin
  36:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  37:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  38:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
  39:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
  40:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  41:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
  45:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
  46:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  47:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
  48:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  50:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  52:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  54:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0x04U    /* 6: TIMx_CH4  */
  55:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** };
  56:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  57:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  58:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
  59:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  60:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 1: - NA */
  61:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  62:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 3: - NA */
  63:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
  64:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 5: - NA */
  65:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   8U             /* 6: OC4M, OC4FE, OC4PE */
  66:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** };
  67:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  68:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  69:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
  70:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  71:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 1: - NA */
  72:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  73:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 3: - NA */
  74:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  75:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 5: - NA */
  76:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   8U             /* 6: CC4S, IC4PSC, IC4F */
  77:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** };
  78:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  79:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  80:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
  81:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 0: CC1P */
  82:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  83:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   4U,            /* 2: CC2P */
  84:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  85:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   8U,            /* 4: CC3P */
  86:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   10U,           /* 5: CC3NP */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 126


  87:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   12U            /* 6: CC4P */
  88:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** };
  89:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
  90:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
  91:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
  92:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   0U,            /* 0: OIS1 */
  93:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   1U,            /* 1: OIS1N */
  94:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   2U,            /* 2: OIS2 */
  95:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   3U,            /* 3: OIS2N */
  96:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   4U,            /* 4: OIS3 */
  97:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   5U,            /* 5: OIS3N */
  98:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   6U             /* 6: OIS4 */
  99:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** };
 100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Remap mask definitions */
 111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define TIMx_OR_RMP_SHIFT  16U
 112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define TIMx_OR_RMP_MASK   0x0000FFFFU
 113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define TIM2_OR_RMP_MASK   (TIM_OR_ITR1_RMP << TIMx_OR_RMP_SHIFT)
 114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define TIM5_OR_RMP_MASK   (TIM_OR_TI4_RMP << TIMx_OR_RMP_SHIFT)
 115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define TIM11_OR_RMP_MASK  (TIM_OR_TI1_RMP << TIMx_OR_RMP_SHIFT)
 116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 127


 144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval none
 148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U : 6U)
 156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval none
 164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****    ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****    ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** typedef struct
 184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
 185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 128


 201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint8_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downco
 208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    from the RCR value (N).
 210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This parameter must be a number between 0x00 and 0xFF.
 214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** typedef struct
 222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
 223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 129


 258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** typedef struct
 270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
 271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** typedef struct
 298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
 299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 130


 315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** typedef struct
 350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
 351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 131


 372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** typedef struct
 381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
 382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                             has been written, their content is frozen until the nex
 401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       switching-on of the outputs.
 404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 132


 429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
 476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 133


 486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter is not stopped at 
 511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter stops counting at 
 512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_0        /*!< The counter counts up and 
 522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_1        /*!<The counter counts up and d
 523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
 533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 134


 543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 135


 600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 136


 657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 137


 714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 138


 771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
 777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
 796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
 808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
 812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
 817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
 820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
 821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
 827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 139


 828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
 830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
 831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
 832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
 833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
 834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
 835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
 836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
 838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
 839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
 840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
 841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
 842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
 843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
 844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
 845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
 846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
 847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
 852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
 855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
 856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
 857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
 858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
 859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
 860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
 861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
 863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
 864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
 865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
 866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
 867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
 868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
 869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
 870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
 871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
 872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_ITR1_RMP_TIM8  TIM2 Internal Trigger1 Remap TIM8
 878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO    TIM2_OR_RMP_MASK                        /*!< TIM2_ITR1 is
 881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_ETH_PTP      (TIM_OR_ITR1_RMP_0 | TIM2_OR_RMP_MASK)  /*!< TIM2_ITR1 is
 882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF   (TIM_OR_ITR1_RMP_1 | TIM2_OR_RMP_MASK)  /*!< TIM2_ITR1 is
 883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM2_ITR1_RMP_OTG_HS_SOF   (TIM_OR_ITR1_RMP | TIM2_OR_RMP_MASK)    /*!< TIM2_ITR1 is
 884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 140


 885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM5_TI4_RMP  TIM5 External Input Ch4 Remap
 889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_GPIO        TIM5_OR_RMP_MASK                         /*!< TIM5 channel 
 892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_LSI         (TIM_OR_TI4_RMP_0 | TIM5_OR_RMP_MASK)    /*!< TIM5 channel 
 893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_LSE         (TIM_OR_TI4_RMP_1 | TIM5_OR_RMP_MASK)    /*!< TIM5 channel 
 894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM5_TI4_RMP_RTC         (TIM_OR_TI4_RMP | TIM5_OR_RMP_MASK)      /*!< TIM5 channel 
 895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM11_TI1_RMP  TIM11 External Input Capture 1 Remap
 900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO        TIM11_OR_RMP_MASK                          /*!< TIM11 chan
 903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #if defined(SPDIFRX)
 904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_SPDIFRX     (TIM_OR_TI1_RMP_0 | TIM11_OR_RMP_MASK)     /*!< TIM11 chan
 905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #else
 906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO1       (TIM_OR_TI1_RMP_0 | TIM11_OR_RMP_MASK)     /*!< TIM11 chan
 907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #endif
 908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_GPIO2       (TIM_OR_TI1_RMP   | TIM11_OR_RMP_MASK)     /*!< TIM11 chan
 909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_TIM11_TI1_RMP_HSE_RTC     (TIM_OR_TI1_RMP_1 | TIM11_OR_RMP_MASK)     /*!< TIM11 chan
 910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
 919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
 920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
 924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Write a value in TIM register.
 928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __REG__ Register to be written
 930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
 931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
 932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
 934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Read a value in TIM register.
 937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
 938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __REG__ Register to be read
 939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Register value
 940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 141


 942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
 944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
 947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
 948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
 952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
 953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
 959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval DTG[0:7]
 960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
 962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))    ?
 963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__C
 964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__C
 965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (__
 966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****     0U)
 967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
 970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
 971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
 973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
 974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
 976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
 977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
 980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
 981:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 982:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __PSC__ prescaler
 983:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
 984:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
 985:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 986:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
 987:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
 988:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
 989:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
 990:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
 991:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
 992:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
 993:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __PSC__ prescaler
 994:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
 995:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
 996:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
 997:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
 998:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 142


 999:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1000:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1001:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1002:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
1003:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1004:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1005:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __PSC__ prescaler
1006:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1007:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1008:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1009:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1010:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1011:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1012:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1013:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1014:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1015:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1016:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1017:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1018:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1019:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1020:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1021:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1022:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1023:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1024:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1025:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1026:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1027:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1028:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1029:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
1030:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1031:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1032:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1033:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1034:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
1035:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1036:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1037:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1038:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1039:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
1040:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1041:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1042:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1043:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
1044:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1045:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1046:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable timer counter.
1047:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1048:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1049:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1050:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1051:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
1052:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1053:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1054:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1055:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 143


1056:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1057:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable timer counter.
1058:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1059:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1060:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1061:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1062:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1063:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1064:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1065:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1066:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1067:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1068:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1069:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1070:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1071:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1072:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1073:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
1074:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1075:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
1076:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1077:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1078:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1079:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable update event generation.
1080:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1081:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1082:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1083:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1084:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1085:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1086:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1087:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1088:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1089:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1090:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable update event generation.
1091:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1092:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1093:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1094:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1095:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1096:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1097:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1098:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1099:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
1105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
1107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
1109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set update event source
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 144


1113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *        - Counter overflow/underflow
1116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *        - Setting the UG bit
1117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
1128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get actual event update source
1134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
1141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
1168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 145


1170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       by a timer instance.
1177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
1194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get actual counter mode.
1198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       by a timer instance.
1201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS));
1214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 146


1227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
1234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
1236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
1251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       instance.
1254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       instance.
1272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 147


1284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the counter value.
1286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the counter value.
1300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the prescaler value.
1326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
1336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
1338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 148


1341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the prescaler value.
1342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
1347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
1349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
1363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
1365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Auto-reload value
1374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255
1387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 149


1398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Repetition counter value
1401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
1403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
1405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
1409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
1413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
1450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 150


1455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
1489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 151


1512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel
1514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel
1539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel
1564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 152


1569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
1582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
1585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
1586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Configure an output channel.
1589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
1590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
1591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
1592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
1593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
1594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
1595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
1596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
1597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
1598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
1599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
1600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput
1601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
1608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
1609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
1610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
1613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
1617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
1618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
1619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
1620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
1621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
1625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 153


1626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
1627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
1628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
1629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode
1630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
1637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
1648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
1652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
1656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
1657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
1658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
1659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode
1660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
1668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
1669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
1670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
1671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
1672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
1673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
1674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
1675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
1677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
1681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 154


1683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
1685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
1686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
1687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
1688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
1689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
1690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
1691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity
1692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
1702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
1707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
1710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
1714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
1715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
1716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
1717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
1718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
1719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
1720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity
1721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
1732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
1733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
1735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
1738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 155


1740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
1742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note This function is significant only for the timer instances
1743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       supporting the break feature. Macro IS_TIM_BREAK_INSTANCE(TIMx)
1744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
1745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a break input.
1746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
1747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_SetIdleState\n
1748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
1749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
1750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
1751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
1752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState
1753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
1763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
1768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
1771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
1775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
1776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS1N         LL_TIM_OC_GetIdleState\n
1777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
1778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
1779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
1780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
1781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState
1782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
1793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
1794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
1796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 156


1797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
1799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
1803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
1804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
1805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
1806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
1807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast
1808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
1826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
1827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
1828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
1829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast
1830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
1839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
1843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
1848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
1849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
1850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
1851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
1852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 157


1854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
1861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
1865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
1870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
1871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
1872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
1873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload
1874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
1891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
1892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
1893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
1894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload
1895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
1904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
1908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 158


1911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
1912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
1913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
1914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
1915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
1916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
1925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
1928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
1929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
1930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
1934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
1938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
1939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
1940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear
1941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
1958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
1961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
1962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
1963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear
1964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 159


1968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
1971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
1973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
1975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
1976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
1977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
1978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
1979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
1980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
1981:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
1982:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
1983:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
1984:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
1985:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
1986:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
1987:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
1988:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
1989:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
1990:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
1991:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1992:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1993:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1994:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1995:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1996:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
1997:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
1998:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
1999:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2000:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2001:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
2002:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2003:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2004:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2005:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2006:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
2007:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2008:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
2009:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
2010:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
2011:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2012:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
2013:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2014:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2015:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
2016:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2017:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
2018:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2019:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2020:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2021:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
2022:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2023:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2024:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 160


2025:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2026:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2027:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
2028:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2029:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2030:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2031:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2032:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
2033:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2034:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
2035:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2036:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2037:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2038:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
2039:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2040:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2041:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2042:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2043:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2044:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
2045:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2046:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2047:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2048:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2049:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
2050:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2051:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
2052:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2053:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2054:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2055:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
2056:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2057:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2058:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2059:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2060:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel is supported by a timer instance.
2061:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
2062:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2063:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2064:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2065:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2066:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
2067:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2068:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
2069:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2070:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2071:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2072:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
2073:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2074:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2075:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2076:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2077:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2078:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
2079:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2080:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2081:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 161


2082:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2083:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
2084:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2085:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
2086:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2087:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2088:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2089:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
2090:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2091:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2092:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2093:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2094:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2095:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
2096:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2097:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2098:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2099:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
2100:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2101:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2102:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2103:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2104:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2105:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
2106:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2107:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2108:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2109:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2110:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2111:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
2112:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2113:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2114:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2115:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
2116:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2117:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2118:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2119:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2120:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2121:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
2122:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2123:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2124:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2125:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2126:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
2127:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
2128:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2129:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2130:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2131:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
2132:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2133:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2134:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2135:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2136:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2137:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
2138:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 162


2139:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2140:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2141:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2142:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2143:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
2144:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2145:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2146:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2147:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
2148:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2149:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2150:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2151:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2152:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2153:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
2154:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2155:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2156:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
2157:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
2158:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2159:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2160:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Configure input channel.
2161:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
2162:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
2163:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
2164:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
2165:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
2166:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
2167:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
2168:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
2169:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
2170:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
2171:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
2172:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
2173:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
2174:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
2175:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
2176:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
2177:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
2178:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
2179:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
2180:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
2181:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2182:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2183:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2184:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2185:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2186:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2187:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2188:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
2189:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
2190:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
2191:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
2192:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2193:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2194:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
2195:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 163


2196:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2197:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2198:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
2199:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
2200:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2201:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
2202:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2203:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2204:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2205:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the active input.
2206:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
2207:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
2208:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
2209:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
2210:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2211:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2212:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2213:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2214:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2215:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2216:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
2217:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2218:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2219:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2220:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2221:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2222:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
2223:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2224:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2225:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2226:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
2227:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2228:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2229:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2230:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the current active input.
2231:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
2232:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
2233:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
2234:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
2235:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2236:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2237:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2238:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2239:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2240:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2241:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2242:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2243:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2244:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2245:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2246:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
2247:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2248:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2249:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2250:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2251:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2252:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 164


2253:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2254:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
2255:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
2256:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
2257:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
2258:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
2259:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2260:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2261:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2262:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2263:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2264:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2265:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
2266:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2267:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2268:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2269:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2270:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2271:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2272:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
2273:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2274:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2275:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2276:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
2277:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2278:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2279:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2280:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
2281:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
2282:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
2283:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
2284:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
2285:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2286:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2287:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2288:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2289:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2290:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2291:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2292:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2293:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2294:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2295:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2296:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2297:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
2298:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2299:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2300:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2301:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
2302:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2303:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2304:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2305:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the input filter duration.
2306:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
2307:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
2308:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
2309:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 165


2310:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2311:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2312:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2313:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2314:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2315:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2316:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
2317:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2318:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2319:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2320:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2321:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2322:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2323:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2324:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2325:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2326:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2327:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2328:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2329:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2330:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2331:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2332:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2333:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2334:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2335:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
2336:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2337:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2338:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2339:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
2340:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2341:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2342:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2343:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the input filter duration.
2344:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
2345:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
2346:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
2347:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
2348:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2349:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2350:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2351:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2352:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2353:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2354:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2355:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2356:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2357:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2358:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2359:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2360:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2361:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2362:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2363:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2364:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2365:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2366:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 166


2367:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2368:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2369:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2370:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2371:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2372:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
2373:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2374:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2375:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2376:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2377:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2378:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2379:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2380:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2381:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2382:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
2383:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2384:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2385:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2386:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2387:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2388:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
2389:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2390:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2391:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2392:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2393:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2394:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2395:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2396:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2397:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2398:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2399:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2400:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2401:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2402:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2403:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2404:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2405:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2406:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2407:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2408:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2409:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2410:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2411:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2412:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2413:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2414:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2415:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2416:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2417:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
2418:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2419:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2420:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2421:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2422:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2423:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 167


2424:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2425:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2426:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2427:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2428:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2429:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2430:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2431:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2432:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
2433:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
2434:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2435:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2436:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2437:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
2438:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2439:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2440:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
2441:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2442:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2443:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2444:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
2445:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2446:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
2447:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2448:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2449:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2450:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
2451:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2452:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides an XOR input.
2453:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
2454:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2455:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2456:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2457:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
2458:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2459:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
2460:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2461:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2462:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2463:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
2464:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
2465:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * a timer instance provides an XOR input.
2466:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
2467:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2468:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2469:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2470:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
2471:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2472:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
2473:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2474:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2475:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2476:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
2477:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2478:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2479:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2480:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 168


2481:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
2482:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
2483:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2484:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2485:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2486:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
2487:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2488:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2489:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2490:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2491:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2492:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
2493:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2494:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2495:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2496:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2497:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
2498:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
2499:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2500:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2501:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2502:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
2503:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2504:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2505:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2506:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2507:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2508:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
2509:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2510:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2511:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2512:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2513:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
2514:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
2515:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2516:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2517:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2518:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
2519:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2520:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2521:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2522:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2523:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2524:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
2525:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
2526:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2527:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2528:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2529:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
2530:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
2531:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2532:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
2533:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2534:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
2535:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2536:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2537:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 169


2538:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2539:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2540:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
2541:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2542:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2543:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
2544:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
2545:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2546:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2547:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
2548:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
2549:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2550:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2551:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
2552:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2553:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2554:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2555:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
2556:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2557:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2558:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2559:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2560:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2561:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
2562:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2563:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2564:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
2565:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2566:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2567:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2568:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
2569:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2570:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
2571:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2572:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2573:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2574:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
2575:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
2576:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2577:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
2578:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2579:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2580:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2581:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
2582:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2583:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
2584:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2585:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2586:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2587:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
2588:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
2589:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
2590:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       function. This timer input must be configured by calling
2591:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
2592:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
2593:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
2594:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 170


2595:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
2596:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
2597:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
2598:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2599:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
2600:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
2601:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
2602:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
2603:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2604:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2605:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
2606:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2607:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
2608:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2609:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2610:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2611:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
2612:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
2613:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
2614:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
2615:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2616:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
2617:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
2618:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
2619:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
2620:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2621:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2622:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
2623:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2624:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
2625:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2626:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2627:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2628:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
2629:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2630:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2631:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
2632:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
2633:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2634:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2635:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
2636:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
2637:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
2638:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
2639:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2640:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
2641:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
2642:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
2643:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
2644:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
2645:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
2646:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
2647:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
2648:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
2649:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2650:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2651:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 171


2652:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2653:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
2654:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2655:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2656:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2657:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
2658:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2659:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2660:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
2661:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2662:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
2663:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
2664:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
2665:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
2666:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
2667:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2668:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2669:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
2670:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2671:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
2672:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2673:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2674:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2675:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
2676:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2677:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2678:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
2679:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2680:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
2681:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
2682:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
2683:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
2684:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
2685:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
2686:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
2687:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
2688:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
2689:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2690:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2691:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
2692:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2693:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
2694:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2695:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2696:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2697:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
2698:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2699:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2700:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
2701:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2702:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2703:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2704:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
2705:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2706:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2707:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2708:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 172


2709:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2710:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
2711:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2712:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
2713:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
2714:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2715:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2716:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2717:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
2718:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2719:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
2720:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2721:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2722:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2723:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
2724:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
2725:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
2726:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
2727:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2728:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2729:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2730:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(TIM_TypeDef *TIMx)
2731:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2732:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
2733:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2734:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2735:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2736:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
2737:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
2738:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
2739:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
2740:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
2741:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
2742:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2743:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
2744:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
2745:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
2746:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
2747:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
2748:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
2749:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
2750:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
2751:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
2752:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
2753:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
2754:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
2755:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
2756:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
2757:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
2758:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
2759:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
2760:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
2761:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
2762:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
2763:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
2764:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
2765:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 173


2766:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
2767:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
2768:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2769:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2770:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
2771:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****                                       uint32_t ETRFilter)
2772:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2773:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
2774:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2775:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2776:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2777:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
2778:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2779:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2780:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Break_Function Break function configuration
2781:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
2782:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2783:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2784:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable the break function.
2785:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2786:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2787:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_EnableBRK
2788:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2789:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2790:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2791:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK(TIM_TypeDef *TIMx)
2792:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2793:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   __IO uint32_t tmpreg;
2794:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKE);
2795:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   /* Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective. 
2796:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   tmpreg = READ_REG(TIMx->BDTR);
2797:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   (void)(tmpreg);
2798:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2799:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2800:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2801:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable the break function.
2802:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_DisableBRK
2803:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2804:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2805:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2806:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2807:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2808:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK(TIM_TypeDef *TIMx)
2809:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2810:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   __IO uint32_t tmpreg;
2811:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKE);
2812:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   /* Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective. 
2813:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   tmpreg = READ_REG(TIMx->BDTR);
2814:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   (void)(tmpreg);
2815:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2816:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2817:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2818:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Configure the break input.
2819:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2820:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2821:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         BKP           LL_TIM_ConfigBRK
2822:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 174


2823:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  BreakPolarity This parameter can be one of the following values:
2824:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_LOW
2825:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_HIGH
2826:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2827:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2828:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK(TIM_TypeDef *TIMx, uint32_t BreakPolarity)
2829:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2830:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   __IO uint32_t tmpreg;
2831:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BKP, BreakPolarity);
2832:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   /* Note: Any write operation to BKP bit takes a delay of 1 APB clock cycle to become effective. *
2833:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   tmpreg = READ_REG(TIMx->BDTR);
2834:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   (void)(tmpreg);
2835:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2836:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2837:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2838:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Select the outputs off state (enabled v.s. disabled) in Idle and Run modes.
2839:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2840:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2841:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         OSSI          LL_TIM_SetOffStates\n
2842:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         BDTR         OSSR          LL_TIM_SetOffStates
2843:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2844:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  OffStateIdle This parameter can be one of the following values:
2845:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_DISABLE
2846:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_ENABLE
2847:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  OffStateRun This parameter can be one of the following values:
2848:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_DISABLE
2849:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_ENABLE
2850:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2851:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2852:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOffStates(TIM_TypeDef *TIMx, uint32_t OffStateIdle, uint32_t OffStat
2853:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2854:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_OSSI | TIM_BDTR_OSSR, OffStateIdle | OffStateRun);
2855:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2856:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2857:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2858:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable automatic output (MOE can be set by software or automatically when a break input
2859:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2860:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2861:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_EnableAutomaticOutput
2862:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2863:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2864:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2865:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAutomaticOutput(TIM_TypeDef *TIMx)
2866:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2867:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_AOE);
2868:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2869:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2870:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2871:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable automatic output (MOE can be set only by software).
2872:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2873:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2874:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_DisableAutomaticOutput
2875:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2876:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2877:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2878:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAutomaticOutput(TIM_TypeDef *TIMx)
2879:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 175


2880:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_AOE);
2881:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2882:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2883:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2884:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicate whether automatic output is enabled.
2885:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2886:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2887:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_IsEnabledAutomaticOutput
2888:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2889:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2890:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2891:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAutomaticOutput(TIM_TypeDef *TIMx)
2892:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2893:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_AOE) == (TIM_BDTR_AOE)) ? 1UL : 0UL);
2894:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2895:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2896:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2897:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Enable the outputs (set the MOE bit in TIMx_BDTR register).
2898:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
2899:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event
2900:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2901:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2902:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_EnableAllOutputs
2903:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2904:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2905:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2906:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAllOutputs(TIM_TypeDef *TIMx)
2907:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2908:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_MOE);
2909:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2910:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2911:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2912:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Disable the outputs (reset the MOE bit in TIMx_BDTR register).
2913:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
2914:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       software and is reset in case of break or break2 event.
2915:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2916:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2917:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_DisableAllOutputs
2918:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2919:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2920:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2921:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAllOutputs(TIM_TypeDef *TIMx)
2922:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2923:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_MOE);
2924:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2925:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2926:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2927:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Indicates whether outputs are enabled.
2928:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
2929:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a timer instance provides a break input.
2930:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_IsEnabledAllOutputs
2931:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2932:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2933:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2934:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAllOutputs(TIM_TypeDef *TIMx)
2935:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2936:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_MOE) == (TIM_BDTR_MOE)) ? 1UL : 0UL);
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 176


2937:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2938:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2939:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2940:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
2941:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2942:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2943:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
2944:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
2945:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2946:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2947:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
2948:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
2949:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
2950:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
2951:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
2952:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
2953:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
2954:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
2955:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
2956:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
2957:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
2958:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
2959:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
2960:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
2961:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
2962:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
2963:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
2964:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
2965:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
2966:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_RCR
2967:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
2968:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
2969:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
2970:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
2971:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_BDTR
2972:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
2973:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
2974:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
2975:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
2976:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
2977:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
2978:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
2979:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
2980:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
2981:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
2982:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
2983:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
2984:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
2985:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
2986:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
2987:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
2988:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
2989:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
2990:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
2991:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
2992:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
2993:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 177


2994:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
2995:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
2996:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
2997:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
2998:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
2999:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
3000:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
3001:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
3002:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
3003:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
3004:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
3005:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
3006:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
3007:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @note Macro IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
3008:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *       a some timer inputs can be remapped.
3009:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll TIM2_OR     ITR1_RMP          LL_TIM_SetRemap\n
3010:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         TIM5_OR     TI4_RMP           LL_TIM_SetRemap\n
3011:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         TIM11_OR    TI1_RMP           LL_TIM_SetRemap
3012:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
3013:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  Remap Remap param depends on the TIMx. Description available only
3014:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
3015:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         Otherwise see Reference Manual description of OR registers.
3016:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3017:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
3018:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3019:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         TIM2: one of the following values
3020:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3021:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            ITR1_RMP can be one of the following values
3022:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ITR1_RMP_TIM8_TRGO
3023:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ITR1_RMP_OTG_FS_SOF
3024:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_ITR1_RMP_OTG_HS_SOF
3025:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3026:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         TIM5: one of the following values
3027:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3028:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI4_RMP_GPIO
3029:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI4_RMP_LSI
3030:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI4_RMP_LSE
3031:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM5_TI4_RMP_RTC
3032:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3033:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         TIM11: one of the following values
3034:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3035:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_GPIO
3036:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_GPIO1 (*)
3037:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_HSE_RTC
3038:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_GPIO2
3039:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM11_TI1_RMP_SPDIFRX (*)
3040:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3041:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *         (*)  Value not defined in all devices. \n
3042:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   *
3043:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
3044:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
3045:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
3046:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
3047:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   MODIFY_REG(TIMx->OR, (Remap >> TIMx_OR_RMP_SHIFT), (Remap & TIMx_OR_RMP_MASK));
3048:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** }
3049:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
3050:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 178


3051:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @}
3052:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
3053:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** 
3054:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
3055:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @{
3056:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
3057:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** /**
3058:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
3059:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
3060:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @param  TIMx Timer instance
3061:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   * @retval None
3062:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   */
3063:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
 524              		.loc 5 3063 22 view .LVU80
 525              	.LBB49:
3064:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h **** {
3065:Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
 526              		.loc 5 3065 3 view .LVU81
 527 0000 044B     		ldr	r3, .L34
 528              	.LBE49:
 529              	.LBE48:
 149:Core/Src/stm32f4xx_it.c ****   FLAG_SET(_EREG_, _BT7F_);
 530              		.loc 1 149 3 is_stmt 0 view .LVU82
 531 0002 0548     		ldr	r0, .L34+4
 532              	.LBB51:
 533              	.LBB50:
 534              		.loc 5 3065 3 view .LVU83
 535 0004 6FF00102 		mvn	r2, #1
 536 0008 1A61     		str	r2, [r3, #16]
 537              	.LVL17:
 538              		.loc 5 3065 3 view .LVU84
 539              	.LBE50:
 540              	.LBE51:
 541              		.loc 1 149 3 is_stmt 1 view .LVU85
 542 000a 4001     		lsls	r0, r0, #5
 543 000c 0121     		movs	r1, #1
 544 000e FFF7FEBF 		b	Set_BitBandVal
 545              	.LVL18:
 546              	.L35:
 547 0012 00BF     		.align	2
 548              	.L34:
 549 0014 00140040 		.word	1073746944
 550 0018 00001001 		.word	_EREG_+17825792
 551              		.cfi_endproc
 552              	.LFE1351:
 554              		.text
 555              	.Letext0:
 556              		.file 6 "c:\\vsarm\\arm-gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 557              		.file 7 "c:\\vsarm\\arm-gcc\\arm-none-eabi\\include\\sys\\lock.h"
 558              		.file 8 "c:\\vsarm\\arm-gcc\\arm-none-eabi\\include\\sys\\_types.h"
 559              		.file 9 "c:\\vsarm\\arm-gcc\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 560              		.file 10 "c:\\vsarm\\arm-gcc\\arm-none-eabi\\include\\sys\\reent.h"
 561              		.file 11 "c:\\vsarm\\arm-gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 562              		.file 12 "c:\\vsarm\\arm-gcc\\arm-none-eabi\\include\\stdlib.h"
 563              		.file 13 "Drivers/CMSIS/Include/core_cm4.h"
 564              		.file 14 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 565              		.file 15 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f429xx.h"
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 179


 566              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 567              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_rcc.h"
 568              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_dma.h"
 569              		.file 19 "Core/Inc/common.h"
 570              		.file 20 "Core/Inc/main.h"
ARM GAS  C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s 			page 180


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_it.c
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:18     .text.NMI_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:27     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:41     .text.HardFault_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:49     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:66     .text.MemManage_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:74     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:91     .text.BusFault_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:99     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:116    .text.UsageFault_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:124    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:141    .text.SVC_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:149    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:160    .text.DebugMon_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:168    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:179    .text.PendSV_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:187    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:198    .text.SysTick_Handler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:206    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:217    .text.RCC_IRQHandler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:225    .text.RCC_IRQHandler:00000000 RCC_IRQHandler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:236    .text.EXTI0_IRQHandler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:244    .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:271    .text.EXTI0_IRQHandler:00000008 $d
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:276    .text.USART1_IRQHandler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:284    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:311    .text.USART1_IRQHandler:0000000c $d
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:316    .text.RTC_Alarm_IRQHandler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:324    .text.RTC_Alarm_IRQHandler:00000000 RTC_Alarm_IRQHandler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:497    .text.RTC_Alarm_IRQHandler:00000054 $d
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:504    .text.TIM7_IRQHandler:00000000 $t
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:512    .text.TIM7_IRQHandler:00000000 TIM7_IRQHandler
C:\Users\zoosman\AppData\Local\Temp\ccgnoQ1j.s:549    .text.TIM7_IRQHandler:00000014 $d

UNDEFINED SYMBOLS
Set_BitBandVal
_EREG_
